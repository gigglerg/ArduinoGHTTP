<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: /home/davec/repo/ArduinoGHTTP/core/ghttp_httphelper.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-b53ec0f(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('ghttp__httphelper_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ghttp_httphelper.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ghttp__httphelper_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * \file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Embedded HTTP request/response handling framework - HTTP helper</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * PROJECT: GHTTP library</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * TARGET SYSTEM: Arduino, STM32, Atmel AT91SAM, portable</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef GHTTP_HTTPHELPER_H</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define GHTTP_HTTPHELPER_H</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span>ghttp {</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#if GHTTP_USE_HELPERS == 1</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * A class with application helpers grouped together offering static methods to reduce repeated work performed by classes implementing \ref Route</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classghttp_1_1_h_t_t_p_helper.htm">   18</a></span>&#160;<span class="keyword">class </span><a class="code" href="classghttp_1_1_h_t_t_p_helper.htm">HTTPHelper</a> {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">     * Build a valid redirect HTTP response using your application&#39;s HTTPResponse instance</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">     * \pre Caller should have setup response maximum and buffer length to suit</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">     * \note If you specify a status code than you are responsible for ensuring there is no content as per the status you&#39;ve chosen</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">     * \note Older versions of HTTP require the relocation location to be absolute.  HTTP1.1 onward allow relative locations (those found on this server, </span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">     * example: &quot;/some/place/here&quot; as opposed to &quot;http://10.0.0.1/some/place/here&quot;).  Either include in location string or use flag prepend_local_ip</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">     * \tparam T Class of your application specific shared data</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment">     * \param[in] s Reference to shared instance (application specific)</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">     * \param[in] location String pointer (NULL terminated) for redirect location</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">     * \param[in] status HTTP response status code, default 0 =&gt; HTTPResponseStatus::STATUS_FOUND if the current status isn&#39;t HTTPResponseStatus::STATUS_CREATED or a 3XX code</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment">     * \param[in] prepend_local_ip Flag indicating location should be absolute with servier IP prepended as in &quot;&lt;ip&gt;[/]&lt;location&gt;&quot;.  Default false</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">     * \param[in] protocol_and_version String pointer to supported protocol and version, like &quot;HTTP/1.0&quot;.  Default NULL =&gt; &quot;HTTP/1.1&quot;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">     * \return State</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">     * \retval false Failure occured during header or content setup</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">     * \retval true Success</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classghttp_1_1_h_t_t_p_helper.htm#a71fb5b2623d5a6b1769102ca9a6c586a">   41</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classghttp_1_1_h_t_t_p_helper.htm#a71fb5b2623d5a6b1769102ca9a6c586a">Redirect</a>(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a> &amp;s, <span class="keywordtype">char</span> *location, <span class="keyword">const</span> uint16_t status = 0U, <span class="keyword">const</span> <span class="keywordtype">bool</span> prepend_local_ip = <span class="keyword">false</span>, <span class="keywordtype">char</span> *protocol_and_version = NULL) {</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordtype">bool</span> set = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        uint16_t current_status = s.response.status.Get();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordtype">char</span> ip4_str[16] = { <span class="charliteral">&#39;\0&#39;</span> }; <span class="comment">// Format &quot;xxx.xxx.xxx.xxx\0&quot;</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">if</span> (!status) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="comment">// Caller didn&#39;t specify a redirect so use default and ensure no content</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            s.response.NoContent();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">if</span> (!status) {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordflow">if</span> (HTTPResponseStatus::STATUS_CREATED == current_status || (current_status&gt;=300 &amp;&amp; current_status&lt;400)) {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <span class="comment">// Accept existing status</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                s.response.status.Set(<a class="code" href="classghttp_1_1_h_t_t_p_response_status.htm#a13e6d558797ac154c068085f942cfd21af6f58b996bc7e53396ef088a1c577cfa">HTTPResponseStatus::STATUS_FOUND</a>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">if</span> (current_status |= status) {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                s.response.status.Set(status);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Add status header</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">if</span> (!protocol_and_version) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            set = s.response.Header(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;HTTP/1.1&quot;</span>));</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            set = s.response.Header(protocol_and_version);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="comment">// Add location header</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">if</span> (set &amp;&amp; location) {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="comment">// Are headers complete?  Undo complete.  This is safe because we know there is no content</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">if</span> (s.response.GetEndOfHeaders()) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                s.response.SetLength( s.response.GetLength() - 2 );</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            set = s.response.HeaderRemove(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;Location&quot;</span>));    <span class="comment">// Checks EoH, only true of not</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="keywordflow">if</span> (set) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                set = s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;Location: &quot;</span>));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                <span class="keywordflow">if</span> (set) {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="keywordflow">if</span> (prepend_local_ip) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                        set = s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;http://&quot;</span>));</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                        s.server.ip4.String(ip4_str);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        set = s.response.Append(ip4_str);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                        <span class="keywordflow">if</span> (<span class="charliteral">&#39;/&#39;</span> != location[0]) {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                            set = s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;/&quot;</span>));</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    set = s.response.Append(location);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="keywordflow">if</span> (set) {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                        set = s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;\r\n&quot;</span>));</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            }</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        s.response.HeaderComplete();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        s.response.Complete();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">return</span> set;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    } <span class="comment">// Redirect(...)</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">#if GHTTP_REQUEST_PROCESS_COOKIES == 1 &amp;&amp; GHTTP_SERVER_USE_SESSIONS == 1</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * Start session.  Uses request session cookies to find related session variables, otherwises gives new session variables.  Setup response buffer ready for reply building along </span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     * with setting the inital response status to HTTPResponseStatus::STATUS_OK and setting response session cookie header</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="comment">     * \tparam T Class of your application specific shared data</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="comment">     * \tparam G Application specific global session data class used to encapsulate whatever session data you require</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment">     * \param[in] s Reference to shared instance (application specific)</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">     * \param[in] response_offset Offset (characters) in buffer between response building start and request.  Anything larger than 0 implies some request information maybe required </span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     * while building response.  Default is 0 =&gt; build response over existing request</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     * \param[in] session_cookie_addition String pointer (NULL terminated) for session cookie addition (if any), example &quot;HttpOnly&quot;.  Default NULL (nothing)</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * \param[in] response_buffer Optional response buffer where it isn&#39;t directly the same as request</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * \param[out] session_index Optional pointer to integer for session index from Session Manager (default NULL).  This index can be used with Session Manager api</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * \return S</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">class</span> T, <span class="keyword">class</span> G&gt;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">static</span> G&amp; StartSession(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a> &amp;s, <span class="keyword">const</span> uint16_t response_offset = 0, <span class="keyword">const</span> <span class="keywordtype">char</span>* session_cookie_addition=NULL, <span class="keywordtype">char</span> *response_buffer=NULL, uint8_t *session_index=NULL) {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">// Setup response</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        s.response.SetMaximum(s.request.GetMaximum() - response_offset);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">if</span> (response_buffer) {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            s.response.SetBuffer(response_buffer, 0, response_offset);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            s.response.SetBuffer(s.request.GetBuffer(), 0, response_offset);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">// Start session and get session variables</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#if GHTTP_SESSIONMGR_INCLUDE_MAC == 0</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keyword">auto</span> &amp;session = s.session_manager.StartSession(s.client.ip4, s.request.session.Get(), session_index);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#else // GHTTP_SESSIONMGR_INCLUDE_MAC != 0</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keyword">auto</span> &amp;session = s.session_manager.StartSession(s.client.ip4, s.client.mac, s.request.session.Get(), session_index);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        G &amp;session_vars = session.user_data;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="comment">// Set response status</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        s.response.status.Set(HTTPResponseStatus::STATUS_OK);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        s.response.Header(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;HTTP/1.1&quot;</span>));</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="comment">// Set session cookie.  Headers shouldn&#39;t be complete since we&#39;re starting them but should check</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">if</span> (!s.response.GetEndOfHeaders()) {</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">if</span> (s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;Set-Cookie: &quot;</span>))) {</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                <span class="keywordflow">if</span> (s.response.Append(GHTTP_SERVER_STRING_SESSION_COOKIE)) {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    <span class="keywordflow">if</span> (s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;=&quot;</span>))) {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                        <span class="keywordflow">if</span> (s.response.Append(session.SessionId().String())) {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                            <span class="keywordflow">if</span> (session_cookie_addition &amp;&amp; strlen(session_cookie_addition)) {</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                                <span class="keywordflow">if</span> (s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;; &quot;</span>))) {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                                    s.response.Append(session_cookie_addition);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                                }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                            }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                            s.response.Append(<a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;\r\n&quot;</span>));</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                        }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">return</span> session_vars;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    } <span class="comment">// StartSession(...)</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#endif // GHTTP_REQUEST_PROCESS_COOKIES == 1 &amp;&amp; GHTTP_SERVER_USE_SESSIONS == 1</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}; <span class="comment">// class HTTPHelper</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">#endif // GHTTP_USE_HELPERS == 1</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}; <span class="comment">// namespace ghttp</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">#endif // GHTTP_HTTPHELPER_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_helper_htm"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_helper.htm">ghttp::HTTPHelper</a></div><div class="ttdoc">A class with application helpers grouped together offering static methods to reduce repeated work per...</div><div class="ttdef"><b>Definition:</b> ghttp_httphelper.h:18</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_response_status_htm_a13e6d558797ac154c068085f942cfd21af6f58b996bc7e53396ef088a1c577cfa"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_response_status.htm#a13e6d558797ac154c068085f942cfd21af6f58b996bc7e53396ef088a1c577cfa">ghttp::HTTPResponseStatus::STATUS_FOUND</a></div><div class="ttdeci">@ STATUS_FOUND</div><div class="ttdoc">Includes Location header.</div><div class="ttdef"><b>Definition:</b> ghttp_httpresponsestatus.h:57</div></div>
<div class="ttc" id="aghttp_8h_htm_a16a0f7e7053a679c9bf4289b441a2be7"><div class="ttname"><a href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a></div><div class="ttdeci">#define T(x)</div><div class="ttdoc">Text marco.</div><div class="ttdef"><b>Definition:</b> ghttp.h:35</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_helper_htm_a71fb5b2623d5a6b1769102ca9a6c586a"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_helper.htm#a71fb5b2623d5a6b1769102ca9a6c586a">ghttp::HTTPHelper::Redirect</a></div><div class="ttdeci">static bool Redirect(T &amp;s, char *location, const uint16_t status=0U, const bool prepend_local_ip=false, char *protocol_and_version=NULL)</div><div class="ttdoc">Build a valid redirect HTTP response using your application's HTTPResponse instance.</div><div class="ttdef"><b>Definition:</b> ghttp_httphelper.h:41</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_4270bfced15e0e73154b13468c7c9ad9.htm">core</a></li><li class="navelem"><a class="el" href="ghttp__httphelper_8h.htm">ghttp_httphelper.h</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 14:59:56 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
