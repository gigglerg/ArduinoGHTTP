<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: examples::ghttp_ethercard_get_post_form_processing::ECWrap Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-b53ec0f(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">examples::ghttp_ethercard_get_post_form_processing::ECWrap Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Wrapper for Ethercard to hide low level functionality and i/f from application.  
 <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="ghttp__ethercard__get__post__form__processing_2ecwrap_8h_source.htm">ecwrap.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a2517ced74891de480649fedeb761bab7"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a2517ced74891de480649fedeb761bab7">Initialise</a> (const uint16_t server_port, const uint8_t *ip4, const uint8_t *gwip4, const uint8_t *mac, uint8_t pin)</td></tr>
<tr class="memdesc:a2517ced74891de480649fedeb761bab7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialise Ethercard + Enc28j60 i/f driver with static IPs.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a2517ced74891de480649fedeb761bab7">More...</a><br /></td></tr>
<tr class="separator:a2517ced74891de480649fedeb761bab7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d5633602858a909d9d1b98a1d48dd22"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a2d5633602858a909d9d1b98a1d48dd22">UpdateClientInformation</a> ()</td></tr>
<tr class="memdesc:a2d5633602858a909d9d1b98a1d48dd22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get client information from Ethercard packet buffer and update shared instance.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a2d5633602858a909d9d1b98a1d48dd22">More...</a><br /></td></tr>
<tr class="separator:a2d5633602858a909d9d1b98a1d48dd22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2f9a558873b81863a4496b09005604c"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#af2f9a558873b81863a4496b09005604c">Send</a> (const char *response, uint32_t response_length, const bool first=true, const bool more=false)</td></tr>
<tr class="memdesc:af2f9a558873b81863a4496b09005604c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Send 1 or more TCP packets, segmenting GHTTP response to client This should really be implemented by a proper POSX socket layer instead of this noddy Ethercard/Enc28j60 api.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#af2f9a558873b81863a4496b09005604c">More...</a><br /></td></tr>
<tr class="separator:af2f9a558873b81863a4496b09005604c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ebeaab1fb482a3f27bb683ca8698229"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a8ebeaab1fb482a3f27bb683ca8698229">Receive</a> (uint8_t *err)</td></tr>
<tr class="memdesc:a8ebeaab1fb482a3f27bb683ca8698229"><td class="mdescLeft">&#160;</td><td class="mdescRight">Receive 1 or more TCP packets, segmenting GHTTP request from client.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a8ebeaab1fb482a3f27bb683ca8698229">More...</a><br /></td></tr>
<tr class="separator:a8ebeaab1fb482a3f27bb683ca8698229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad542346cc7e5ab1cdce86cfd8e331b26"><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#ad542346cc7e5ab1cdce86cfd8e331b26">GetPacketPayloadBuffer</a> ()</td></tr>
<tr class="memdesc:ad542346cc7e5ab1cdce86cfd8e331b26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Ethercard packet buffer, payload start which is after IP+TCP headers.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#ad542346cc7e5ab1cdce86cfd8e331b26">More...</a><br /></td></tr>
<tr class="separator:ad542346cc7e5ab1cdce86cfd8e331b26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af56bf664c3958ee3e6ace1b3120b0fd8"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#af56bf664c3958ee3e6ace1b3120b0fd8">GetPacketPayloadBufferLength</a> ()</td></tr>
<tr class="memdesc:af56bf664c3958ee3e6ace1b3120b0fd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Ethercard packet buffer payload maximum length.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#af56bf664c3958ee3e6ace1b3120b0fd8">More...</a><br /></td></tr>
<tr class="separator:af56bf664c3958ee3e6ace1b3120b0fd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8655420888947111982ec63be1402163"><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a8655420888947111982ec63be1402163">GetHTTPBuffer</a> ()</td></tr>
<tr class="memdesc:a8655420888947111982ec63be1402163"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get GHTTP request/response buffer.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a8655420888947111982ec63be1402163">More...</a><br /></td></tr>
<tr class="separator:a8655420888947111982ec63be1402163"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a944b95872e6a5b0fa575b7fbc7861001"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a944b95872e6a5b0fa575b7fbc7861001">GetHTTPBufferLength</a> ()</td></tr>
<tr class="memdesc:a944b95872e6a5b0fa575b7fbc7861001"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get GHTTP request/response buffer maximum length.  <a href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a944b95872e6a5b0fa575b7fbc7861001">More...</a><br /></td></tr>
<tr class="separator:a944b95872e6a5b0fa575b7fbc7861001"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Wrapper for Ethercard to hide low level functionality and i/f from application. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8655420888947111982ec63be1402163"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8655420888947111982ec63be1402163">&#9670;&nbsp;</a></span>GetHTTPBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char * ECWrap::GetHTTPBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get GHTTP request/response buffer. </p>
<dl class="section return"><dt>Returns</dt><dd>Buffer pointer </dd></dl>

</div>
</div>
<a id="a944b95872e6a5b0fa575b7fbc7861001"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a944b95872e6a5b0fa575b7fbc7861001">&#9670;&nbsp;</a></span>GetHTTPBufferLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t ECWrap::GetHTTPBufferLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get GHTTP request/response buffer maximum length. </p>
<dl class="section return"><dt>Returns</dt><dd>Buffer allocation length </dd></dl>

</div>
</div>
<a id="ad542346cc7e5ab1cdce86cfd8e331b26"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad542346cc7e5ab1cdce86cfd8e331b26">&#9670;&nbsp;</a></span>GetPacketPayloadBuffer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">char * ECWrap::GetPacketPayloadBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get Ethercard packet buffer, payload start which is after IP+TCP headers. </p>
<dl class="section return"><dt>Returns</dt><dd>Data buffer pointer </dd></dl>

</div>
</div>
<a id="af56bf664c3958ee3e6ace1b3120b0fd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af56bf664c3958ee3e6ace1b3120b0fd8">&#9670;&nbsp;</a></span>GetPacketPayloadBufferLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t ECWrap::GetPacketPayloadBufferLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get Ethercard packet buffer payload maximum length. </p>
<dl class="section return"><dt>Returns</dt><dd>Data buffer allocation length </dd></dl>

</div>
</div>
<a id="a2517ced74891de480649fedeb761bab7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2517ced74891de480649fedeb761bab7">&#9670;&nbsp;</a></span>Initialise()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t ECWrap::Initialise </td>
          <td>(</td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>server_port</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>ip4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>gwip4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint8_t *&#160;</td>
          <td class="paramname"><em>mac</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>pin</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialise Ethercard + Enc28j60 i/f driver with static IPs. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">server_port</td><td>Server TCP/IP port </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">ip4</td><td>Byte array pointer (4 Octets) representing IP4 address of node on LAN </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">gwip4</td><td>Byte array pointer (4 Octets) representing IP4 address of local gateway </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">mac</td><td>Byte array pointer (6 Octets) representing MAC address of node on LAN </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">pin</td><td>MCU/board specific SPI0 bus, slave select pin </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="ghttp_ethercard_get_post_form_processing_8ino-example.htm#a9">ghttp_ethercard_get_post_form_processing.ino</a>.</dd>
</dl>

</div>
</div>
<a id="a8ebeaab1fb482a3f27bb683ca8698229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ebeaab1fb482a3f27bb683ca8698229">&#9670;&nbsp;</a></span>Receive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ECWrap::Receive </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>err</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Receive 1 or more TCP packets, segmenting GHTTP request from client. </p>
<p>GHTTP parse is used to decide if request complete and ready for processing.</p>
<dl class="section note"><dt>Note</dt><dd>Internally invokes <a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm#a2d5633602858a909d9d1b98a1d48dd22">UpdateClientInformation</a></dd></dl>
<p>Implementation follows:</p><ol type="1">
<li>Read request first line. Parse it, Are we done with no errors?</li>
<li>Read headers (if any). Parse it, Are we done with no errors?</li>
<li><p class="startli">Content (if any). Parse it, Are we done with no errors?</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000008">Todo:</a></b></dt><dd>Deal with millis() overflow and roll, right now it will indicate timeout</dd></dl>
</li>
</ol>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">err</td><td>Pointer to request parse error code sd.request.GetLastError(). Everything is an error that isn't mentioned below sd.request.ERR_NONE Assume request parse complete. Should send response sd.request.ERR_SEGMENTATION Send acknowledge sd.request.ERR_PARSE_UNEXPECTED_DATA On request buffer overflow. Should redirect </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Receive status </dd></dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>HTTP request received and parsed </td></tr>
    <tr><td class="paramname">false</td><td>Nothing yet to report </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="ghttp_ethercard_get_post_form_processing_8ino-example.htm#a13">ghttp_ethercard_get_post_form_processing.ino</a>.</dd>
</dl>

</div>
</div>
<a id="af2f9a558873b81863a4496b09005604c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2f9a558873b81863a4496b09005604c">&#9670;&nbsp;</a></span>Send()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ECWrap::Send </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>response</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>response_length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>first</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>more</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Send 1 or more TCP packets, segmenting GHTTP response to client This should really be implemented by a proper POSX socket layer instead of this noddy Ethercard/Enc28j60 api. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">response</td><td>HTTP Your response buffer or user buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">response_length</td><td>Your response length (Bytes/ASCII characters) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">first</td><td>Flag indicating first invoke or data segment (default true) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">more</td><td>Flag indicating more data to follow (default false) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="ghttp_ethercard_get_post_form_processing_8ino-example.htm#a25">ghttp_ethercard_get_post_form_processing.ino</a>.</dd>
</dl>

</div>
</div>
<a id="a2d5633602858a909d9d1b98a1d48dd22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d5633602858a909d9d1b98a1d48dd22">&#9670;&nbsp;</a></span>UpdateClientInformation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ECWrap::UpdateClientInformation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get client information from Ethercard packet buffer and update shared instance. </p>
<dl class="section note"><dt>Note</dt><dd>Updates when GHTTP_SERVER_USE_SESSIONS optionally GHTTP_SESSIONMGR_INCLUDE_MAC set to 1 or ECWRAP_UPDATE_CLIENT_IP or ECWRAP_UPDATE_CLIENT_MAC </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceexamples.htm">examples</a></li><li class="navelem"><b>ghttp_ethercard_get_post_form_processing</b></li><li class="navelem"><a class="el" href="classexamples_1_1ghttp__ethercard__get__post__form__processing_1_1_e_c_wrap.htm">ECWrap</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 14:59:56 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
