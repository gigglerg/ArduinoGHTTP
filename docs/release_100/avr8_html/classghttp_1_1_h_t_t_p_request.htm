<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: ghttp::HTTPRequest&lt; N, V, CT, FV, CN &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-b53ec0f(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classghttp_1_1_h_t_t_p_request.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classghttp_1_1_h_t_t_p_request-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ghttp::HTTPRequest&lt; N, V, CT, FV, CN &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>HTTP Request class with helpers to assist in the parsing of valid HTTP request messages, likely received over TCP/IP.  
 <a href="classghttp_1_1_h_t_t_p_request.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="ghttp__httprequest_8h_source.htm">ghttp_httprequest.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab7806a3e6e80d7179322be3f9e55a76e"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a> { <br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea030eaf86bd425928d1897e1613e167b5">ERR_NONE</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea2f591b8ae97ac1951ee6ee6b070ad982">ERR_SEGMENTATION</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea33589a8091fc3a037c437084ac7fabbd">ERR_PARSE_EOF</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea66cd3a56dfa17d2503463f388c3a454e">ERR_PARSE_BAD_FIRST_LINE_SOL</a>, 
<br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea2b548a43f7d6cd0eff8f4091f5c6a651">ERR_PARSE_BAD_METHOD</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea590d8981d5efa9e33982bfbf4e6e4ac2">ERR_PARSE_BAD_URL</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eac0dd4f757e2f3cab80159bfb9987a950">ERR_PARSE_BAD_GET_PARAM_NAME</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea97411748eed7816ada89724ca046ee99">ERR_PARSE_BAD_GET_PARAM_VALUE</a>, 
<br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eaeeb2b92d7605d66416b0c02e79ecae83">ERR_PARSE_BAD_GET_PARAM_TO_MANY</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea338c1b9925e3b6c58082646043ea5070">ERR_PARSE_BAD_PROTOCOL</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea9309d504ab8ad7447e65cfa741f2ec21">ERR_PARSE_BAD_PROTOCOL_VERSION</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea74a87ed891720da5c3c0df96ee56cd5a">ERR_PARSE_BAD_FIRST_LINE_NO_EOL</a>, 
<br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eacba620c9f5f04fd66cc6c515e3bb1d34">ERR_PARSE_BAD_HEADER_LINE_SOL</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eaa2a7b9c5b5cf08580e0a4ecb9cd6737d">ERR_PARSE_BAD_HEADER_LINE_NAME</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea23278da017ab157c3536132cb4b2edbb">ERR_PARSE_BAD_HEADER_LINE_VALUE</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eae9ede3d08d5483d9ad63bda45fdfa0ee">ERR_PARSE_HEADER_LIMIT</a>, 
<br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ead5e0d118d13f2b65dab99b12cfb62ee9">ERR_PARSE_BAD_HEADER_LINE_NO_EOL</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eae53ff981f4fe7186c3a402dcfc0e0447">ERR_PARSE_UNEXPECTED_DATA</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea0d19914b6f48abdf0f4e2a8e917902cb">ERR_PARSE_CONTENT_LENGTH_MISMATCH</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ead19faf40e062229b547ce23d583213bf">ERR_PARSE_BAD_COOKIE_NAME</a>, 
<br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea0f0743cd79b1bc7d5ae961153dc6fed5">ERR_PARSE_BAD_COOKIE_VALUE</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ead9a600c438a976355b8fab73e437ad90">ERR_PARSE_BAD_COOKIE_TO_MANY</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea9c226931afe0b16c0e524758579f834c">ERR_PARSE_BAD_POST_PARAM_NAME</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eafc69a01ca888971abe5bac484b5c0368">ERR_PARSE_BAD_POST_PARAM_VALUE</a>, 
<br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eaa735a15118339104b3de068c137b9400">ERR_PARSE_BAD_POST_PARAM_TO_MANY</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eac3591822f80ddd5d301031acbd81676a">ERR_PARSE_BAD_POST_FILE_PARAM_TO_MANY</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea239f6cafd273456d33caf26af478ae04">ERR_PARSE_BAD_CTYPE_NAME</a>, 
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76eaa9f1dfb0a8bbbca9636a551fd4e7df85">ERR_PARSE_BAD_CTYPE_VALUE</a>, 
<br />
&#160;&#160;<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea65684557d691b33e43ffa3f4d1c817da">ERR_PARSE_BAD_CTYPE_TO_MANY</a>, 
<b>ERR_PARSE_MAX</b>
<br />
 }</td></tr>
<tr class="memdesc:ab7806a3e6e80d7179322be3f9e55a76e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enum of possible request parse errors.  <a href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">More...</a><br /></td></tr>
<tr class="separator:ab7806a3e6e80d7179322be3f9e55a76e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a11963e969fbd5acbf446184131d983cd"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a11963e969fbd5acbf446184131d983cd">HTTPRequest</a> ()</td></tr>
<tr class="memdesc:a11963e969fbd5acbf446184131d983cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor, make stable instance.  <a href="classghttp_1_1_h_t_t_p_request.htm#a11963e969fbd5acbf446184131d983cd">More...</a><br /></td></tr>
<tr class="separator:a11963e969fbd5acbf446184131d983cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a762b73d5273c2ccf934734c0bb98dda2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a> () const</td></tr>
<tr class="memdesc:a762b73d5273c2ccf934734c0bb98dda2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get last error.  <a href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">More...</a><br /></td></tr>
<tr class="separator:a762b73d5273c2ccf934734c0bb98dda2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0a4f01bfba2cb2a460440c0001a1303"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab0a4f01bfba2cb2a460440c0001a1303">Parse</a> (char *request_buffer, uint16_t length, uint16_t max_length, const bool parse_content=true, const bool segmentation=true)</td></tr>
<tr class="memdesc:ab0a4f01bfba2cb2a460440c0001a1303"><td class="mdescLeft">&#160;</td><td class="mdescRight">Request parse.  <a href="classghttp_1_1_h_t_t_p_request.htm#ab0a4f01bfba2cb2a460440c0001a1303">More...</a><br /></td></tr>
<tr class="separator:ab0a4f01bfba2cb2a460440c0001a1303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb2c83afa0323f15041def685227fe58"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#aeb2c83afa0323f15041def685227fe58">GetContentLength</a> () const</td></tr>
<tr class="memdesc:aeb2c83afa0323f15041def685227fe58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get content length.  <a href="classghttp_1_1_h_t_t_p_request.htm#aeb2c83afa0323f15041def685227fe58">More...</a><br /></td></tr>
<tr class="separator:aeb2c83afa0323f15041def685227fe58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classghttp_1_1_h_t_t_p_buffer"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classghttp_1_1_h_t_t_p_buffer')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm">ghttp::HTTPBuffer</a></td></tr>
<tr class="memitem:a8af9de4e14113804f7dd131f2ef29fa7 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a8af9de4e14113804f7dd131f2ef29fa7">HTTPBuffer</a> ()</td></tr>
<tr class="memdesc:a8af9de4e14113804f7dd131f2ef29fa7 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor, make stable instance.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a8af9de4e14113804f7dd131f2ef29fa7">More...</a><br /></td></tr>
<tr class="separator:a8af9de4e14113804f7dd131f2ef29fa7 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08158f4531e2874e50b6f4182cf04966 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a08158f4531e2874e50b6f4182cf04966">HTTPBuffer</a> (char *<a class="el" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>, uint16_t max_length, uint16_t length=0, uint16_t offset=0)</td></tr>
<tr class="memdesc:a08158f4531e2874e50b6f4182cf04966 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor, make stable instance.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a08158f4531e2874e50b6f4182cf04966">More...</a><br /></td></tr>
<tr class="separator:a08158f4531e2874e50b6f4182cf04966 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0ef2438e1c7ae3953641b6fa310cddb inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ac0ef2438e1c7ae3953641b6fa310cddb">Clear</a> (const bool zero_clear=false)</td></tr>
<tr class="memdesc:ac0ef2438e1c7ae3953641b6fa310cddb inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear buffer, includes characteristics like length and offset.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#ac0ef2438e1c7ae3953641b6fa310cddb">More...</a><br /></td></tr>
<tr class="separator:ac0ef2438e1c7ae3953641b6fa310cddb inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f97bb5d3220c9dde7b002a95f79aa24 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a9f97bb5d3220c9dde7b002a95f79aa24">At</a> (const uint16_t i) const</td></tr>
<tr class="memdesc:a9f97bb5d3220c9dde7b002a95f79aa24 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">At accessor.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a9f97bb5d3220c9dde7b002a95f79aa24">More...</a><br /></td></tr>
<tr class="separator:a9f97bb5d3220c9dde7b002a95f79aa24 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf1170ca339ec7ad0b14946d923df595 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#acf1170ca339ec7ad0b14946d923df595">At</a> (const uint16_t i, char c)</td></tr>
<tr class="memdesc:acf1170ca339ec7ad0b14946d923df595 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">At accessor setter.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#acf1170ca339ec7ad0b14946d923df595">More...</a><br /></td></tr>
<tr class="separator:acf1170ca339ec7ad0b14946d923df595 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a567f458970d2f3182f8d866da0708802 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="a567f458970d2f3182f8d866da0708802"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a> &amp;rhs)</td></tr>
<tr class="separator:a567f458970d2f3182f8d866da0708802 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87f14079ea832f40dc7ff78ba361d1a8 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="a87f14079ea832f40dc7ff78ba361d1a8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a> *rhs)</td></tr>
<tr class="separator:a87f14079ea832f40dc7ff78ba361d1a8 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61ab287b3bd6073b3e0f1ae5c0fe13ab inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="a61ab287b3bd6073b3e0f1ae5c0fe13ab"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const char *rhs)</td></tr>
<tr class="separator:a61ab287b3bd6073b3e0f1ae5c0fe13ab inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98aedbcd7d44b000f09f360cf4a6799e inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="a98aedbcd7d44b000f09f360cf4a6799e"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const uint16_t &amp;rhs)</td></tr>
<tr class="separator:a98aedbcd7d44b000f09f360cf4a6799e inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa99afbe2b1298d0891ae1f75f3fcbc1b inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="aa99afbe2b1298d0891ae1f75f3fcbc1b"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const uint16_t &amp;rhs)</td></tr>
<tr class="separator:aa99afbe2b1298d0891ae1f75f3fcbc1b inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a509bf0ace750fa0458df946cfb62cb91 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a509bf0ace750fa0458df946cfb62cb91">operator[]</a> (const uint16_t i)</td></tr>
<tr class="memdesc:a509bf0ace750fa0458df946cfb62cb91 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index operator, use to access characters as alternative to <a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a9f97bb5d3220c9dde7b002a95f79aa24">At</a>.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a509bf0ace750fa0458df946cfb62cb91">More...</a><br /></td></tr>
<tr class="separator:a509bf0ace750fa0458df946cfb62cb91 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaccfbecf78f865649933f4813c2d6a82 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#aaccfbecf78f865649933f4813c2d6a82">GetBuffer</a> () const</td></tr>
<tr class="memdesc:aaccfbecf78f865649933f4813c2d6a82 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get buffer.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#aaccfbecf78f865649933f4813c2d6a82">More...</a><br /></td></tr>
<tr class="separator:aaccfbecf78f865649933f4813c2d6a82 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28df8375d6824c339014a1f192aa1742 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a28df8375d6824c339014a1f192aa1742">SetBuffer</a> (char *<a class="el" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>, uint16_t length=0, uint16_t offset=0)</td></tr>
<tr class="memdesc:a28df8375d6824c339014a1f192aa1742 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set buffer Because Request and Responses may share the same buffer and some Request information maybe required for building a Response, use offset to keep required Request information buffered and usable while Response being built.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a28df8375d6824c339014a1f192aa1742">More...</a><br /></td></tr>
<tr class="separator:a28df8375d6824c339014a1f192aa1742 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9acfe159d320827ab76c9dbad00591e inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ad9acfe159d320827ab76c9dbad00591e">GetOffset</a> () const</td></tr>
<tr class="memdesc:ad9acfe159d320827ab76c9dbad00591e inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get offset.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#ad9acfe159d320827ab76c9dbad00591e">More...</a><br /></td></tr>
<tr class="separator:ad9acfe159d320827ab76c9dbad00591e inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf720940a9f2357e50f539f184dd8679 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#adf720940a9f2357e50f539f184dd8679">PrepareZeroOffsetData</a> ()</td></tr>
<tr class="memdesc:adf720940a9f2357e50f539f184dd8679 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prepare zero offset data.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#adf720940a9f2357e50f539f184dd8679">More...</a><br /></td></tr>
<tr class="separator:adf720940a9f2357e50f539f184dd8679 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeb9acdefa93179e395c6c7d7d001244 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#aeeb9acdefa93179e395c6c7d7d001244">GetLength</a> () const</td></tr>
<tr class="memdesc:aeeb9acdefa93179e395c6c7d7d001244 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get length.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#aeeb9acdefa93179e395c6c7d7d001244">More...</a><br /></td></tr>
<tr class="separator:aeeb9acdefa93179e395c6c7d7d001244 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8111d390d405e2cb61728c0dbed4114 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ac8111d390d405e2cb61728c0dbed4114">SetLength</a> (const uint16_t length, const bool ignore_maximum=false)</td></tr>
<tr class="memdesc:ac8111d390d405e2cb61728c0dbed4114 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set length.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#ac8111d390d405e2cb61728c0dbed4114">More...</a><br /></td></tr>
<tr class="separator:ac8111d390d405e2cb61728c0dbed4114 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69412ab74669a174f581f7c0349db233 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a69412ab74669a174f581f7c0349db233">GetMaximum</a> () const</td></tr>
<tr class="memdesc:a69412ab74669a174f581f7c0349db233 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get buffer maximum.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a69412ab74669a174f581f7c0349db233">More...</a><br /></td></tr>
<tr class="separator:a69412ab74669a174f581f7c0349db233 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef79015e1a8fb34dd96424849e510831 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#aef79015e1a8fb34dd96424849e510831">SetMaximum</a> (const uint16_t max_length)</td></tr>
<tr class="memdesc:aef79015e1a8fb34dd96424849e510831 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set buffer maximum.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#aef79015e1a8fb34dd96424849e510831">More...</a><br /></td></tr>
<tr class="separator:aef79015e1a8fb34dd96424849e510831 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece2ac4a4458d8aa16731256dac64216 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#aece2ac4a4458d8aa16731256dac64216">Append</a> (const char *str, uint16_t length=0)</td></tr>
<tr class="memdesc:aece2ac4a4458d8aa16731256dac64216 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append character string.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#aece2ac4a4458d8aa16731256dac64216">More...</a><br /></td></tr>
<tr class="separator:aece2ac4a4458d8aa16731256dac64216 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c141425bc8656970d4d8e268fb7d74a inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a8c141425bc8656970d4d8e268fb7d74a">Append</a> (const uint8_t *data, uint16_t length)</td></tr>
<tr class="memdesc:a8c141425bc8656970d4d8e268fb7d74a inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append unsigned character array.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a8c141425bc8656970d4d8e268fb7d74a">More...</a><br /></td></tr>
<tr class="separator:a8c141425bc8656970d4d8e268fb7d74a inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a90814d09c0383bf85c65213869d41b inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a3a90814d09c0383bf85c65213869d41b">Append</a> (char ch)</td></tr>
<tr class="memdesc:a3a90814d09c0383bf85c65213869d41b inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append character.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a3a90814d09c0383bf85c65213869d41b">More...</a><br /></td></tr>
<tr class="separator:a3a90814d09c0383bf85c65213869d41b inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f23fe8e676cdaab57c98a3e9478e25d inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a4f23fe8e676cdaab57c98a3e9478e25d inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a4f23fe8e676cdaab57c98a3e9478e25d">AppendInt</a> (<a class="el" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a> v, uint8_t base=10)</td></tr>
<tr class="memdesc:a4f23fe8e676cdaab57c98a3e9478e25d inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append signed integer type T with given base.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a4f23fe8e676cdaab57c98a3e9478e25d">More...</a><br /></td></tr>
<tr class="separator:a4f23fe8e676cdaab57c98a3e9478e25d inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae752ad27af78588f467013e877a7ff80 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae752ad27af78588f467013e877a7ff80 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ae752ad27af78588f467013e877a7ff80">AppendUInt</a> (<a class="el" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a> v, uint8_t base=10)</td></tr>
<tr class="memdesc:ae752ad27af78588f467013e877a7ff80 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append unsigned integer type T with given base.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#ae752ad27af78588f467013e877a7ff80">More...</a><br /></td></tr>
<tr class="separator:ae752ad27af78588f467013e877a7ff80 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8873883c5a9edd60c266755f5e36dc03 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memTemplParams" colspan="2">template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8873883c5a9edd60c266755f5e36dc03 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a8873883c5a9edd60c266755f5e36dc03">AppendDecimal</a> (<a class="el" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a> v, uint8_t digits_below_dp=3, uint8_t str_allocation=16)</td></tr>
<tr class="memdesc:a8873883c5a9edd60c266755f5e36dc03 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append decimal type T with specific digits below decimal point.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a8873883c5a9edd60c266755f5e36dc03">More...</a><br /></td></tr>
<tr class="separator:a8873883c5a9edd60c266755f5e36dc03 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ecdeda5ceb92a1000ac1dda97b94353 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a7ecdeda5ceb92a1000ac1dda97b94353">Insert</a> (uint16_t i, const char *str, uint16_t length=0)</td></tr>
<tr class="memdesc:a7ecdeda5ceb92a1000ac1dda97b94353 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Insert character string at specific index.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a7ecdeda5ceb92a1000ac1dda97b94353">More...</a><br /></td></tr>
<tr class="separator:a7ecdeda5ceb92a1000ac1dda97b94353 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8dd86c6d02110b0493787816b1d2452d inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a8dd86c6d02110b0493787816b1d2452d">InsertPadding</a> (uint16_t i, char c, uint16_t length)</td></tr>
<tr class="memdesc:a8dd86c6d02110b0493787816b1d2452d inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Insert padding character (a repeated character) at specific index to given length.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a8dd86c6d02110b0493787816b1d2452d">More...</a><br /></td></tr>
<tr class="separator:a8dd86c6d02110b0493787816b1d2452d inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a343dafab39305d3dcf72c885a3b86693 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a343dafab39305d3dcf72c885a3b86693">Remove</a> (uint16_t i, uint16_t e)</td></tr>
<tr class="memdesc:a343dafab39305d3dcf72c885a3b86693 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove character(s) at specific start index to end index.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a343dafab39305d3dcf72c885a3b86693">More...</a><br /></td></tr>
<tr class="separator:a343dafab39305d3dcf72c885a3b86693 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab698dae0934552ac7b565011d9bab08f inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ab698dae0934552ac7b565011d9bab08f">Replace</a> (uint16_t i, uint16_t e, const char *str, uint16_t length=0)</td></tr>
<tr class="memdesc:ab698dae0934552ac7b565011d9bab08f inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace character(s) at specific start index to end index with given character string.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#ab698dae0934552ac7b565011d9bab08f">More...</a><br /></td></tr>
<tr class="separator:ab698dae0934552ac7b565011d9bab08f inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a133fa6599f1e5dccb9a13d0fbe7f742a inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="a133fa6599f1e5dccb9a13d0fbe7f742a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (PGM_VOID_P rhs)</td></tr>
<tr class="separator:a133fa6599f1e5dccb9a13d0fbe7f742a inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ac4adab9f43fffb8cf84dc8cdf9a645 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a0ac4adab9f43fffb8cf84dc8cdf9a645">Append</a> (PGM_VOID_P str, uint16_t length=0)</td></tr>
<tr class="memdesc:a0ac4adab9f43fffb8cf84dc8cdf9a645 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append character string.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a0ac4adab9f43fffb8cf84dc8cdf9a645">More...</a><br /></td></tr>
<tr class="separator:a0ac4adab9f43fffb8cf84dc8cdf9a645 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a554536ffc0965d0724f537e20ceb3387 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a554536ffc0965d0724f537e20ceb3387">Insert</a> (uint16_t i, PGM_VOID_P str, uint16_t length=0)</td></tr>
<tr class="memdesc:a554536ffc0965d0724f537e20ceb3387 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Insert character string at specific index.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a554536ffc0965d0724f537e20ceb3387">More...</a><br /></td></tr>
<tr class="separator:a554536ffc0965d0724f537e20ceb3387 inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b40289f6622010843c02522c77b09ab inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a8b40289f6622010843c02522c77b09ab">Replace</a> (uint16_t i, uint16_t e, PGM_VOID_P str, uint16_t length=0)</td></tr>
<tr class="memdesc:a8b40289f6622010843c02522c77b09ab inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replace character(s) at specific start index to end index with given character string.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a8b40289f6622010843c02522c77b09ab">More...</a><br /></td></tr>
<tr class="separator:a8b40289f6622010843c02522c77b09ab inherit pub_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a5380fe9da2c5f26c93f358a1e70d338e"><td class="memItemLeft" align="right" valign="top"><a id="a5380fe9da2c5f26c93f358a1e70d338e"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a5380fe9da2c5f26c93f358a1e70d338e">url_raw</a></td></tr>
<tr class="memdesc:a5380fe9da2c5f26c93f358a1e70d338e"><td class="mdescLeft">&#160;</td><td class="mdescRight">RFC 1738, Not URL decoded. Does not include username or password if specified. <br /></td></tr>
<tr class="separator:a5380fe9da2c5f26c93f358a1e70d338e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe80b46c74b8bc40984c8533e581614f"><td class="memItemLeft" align="right" valign="top"><a id="abe80b46c74b8bc40984c8533e581614f"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#abe80b46c74b8bc40984c8533e581614f">method</a></td></tr>
<tr class="memdesc:abe80b46c74b8bc40984c8533e581614f"><td class="mdescLeft">&#160;</td><td class="mdescRight">RFC 1738, URL method. <br /></td></tr>
<tr class="separator:abe80b46c74b8bc40984c8533e581614f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9c24208c9eba1dbe55baf79379b8b48"><td class="memItemLeft" align="right" valign="top"><a id="ad9c24208c9eba1dbe55baf79379b8b48"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ad9c24208c9eba1dbe55baf79379b8b48">url</a></td></tr>
<tr class="memdesc:ad9c24208c9eba1dbe55baf79379b8b48"><td class="mdescLeft">&#160;</td><td class="mdescRight">RFC 1738, Decoded URL, i.e. route like /msg or / or /request etc. <br /></td></tr>
<tr class="separator:ad9c24208c9eba1dbe55baf79379b8b48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94291c230f517724d4ae0e8b1826bab4"><td class="memItemLeft" align="right" valign="top"><a id="a94291c230f517724d4ae0e8b1826bab4"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a94291c230f517724d4ae0e8b1826bab4">username</a></td></tr>
<tr class="memdesc:a94291c230f517724d4ae0e8b1826bab4"><td class="mdescLeft">&#160;</td><td class="mdescRight">RFC 1738, Not from session but URL before . <br /></td></tr>
<tr class="separator:a94291c230f517724d4ae0e8b1826bab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c2044695dc27a7e704943145d9d0a44"><td class="memItemLeft" align="right" valign="top"><a id="a0c2044695dc27a7e704943145d9d0a44"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a0c2044695dc27a7e704943145d9d0a44">password</a></td></tr>
<tr class="memdesc:a0c2044695dc27a7e704943145d9d0a44"><td class="mdescLeft">&#160;</td><td class="mdescRight">RFC 1738, Not from session but URL before . <br /></td></tr>
<tr class="separator:a0c2044695dc27a7e704943145d9d0a44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cfdd178c67e707b55ce5683676d5c3b"><td class="memItemLeft" align="right" valign="top"><a id="a6cfdd178c67e707b55ce5683676d5c3b"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a6cfdd178c67e707b55ce5683676d5c3b">protocol</a></td></tr>
<tr class="memdesc:a6cfdd178c67e707b55ce5683676d5c3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">RFC 1738, protocol like HTTP. <br /></td></tr>
<tr class="separator:a6cfdd178c67e707b55ce5683676d5c3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ad6620d174410f7ffb1768bcf19e094"><td class="memItemLeft" align="right" valign="top"><a id="a4ad6620d174410f7ffb1768bcf19e094"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a4ad6620d174410f7ffb1768bcf19e094">protocol_version</a></td></tr>
<tr class="memdesc:a4ad6620d174410f7ffb1768bcf19e094"><td class="mdescLeft">&#160;</td><td class="mdescRight">RFC 1738, protocol version like 1.0, 1.1 etc. <br /></td></tr>
<tr class="separator:a4ad6620d174410f7ffb1768bcf19e094"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0026fa15619468fd03a3f146dd4d180c"><td class="memItemLeft" align="right" valign="top"><a id="a0026fa15619468fd03a3f146dd4d180c"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_substring.htm">HTTPSubstring</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a0026fa15619468fd03a3f146dd4d180c">content</a></td></tr>
<tr class="memdesc:a0026fa15619468fd03a3f146dd4d180c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Content after headers. May only contain first string if POST decoded. <br /></td></tr>
<tr class="separator:a0026fa15619468fd03a3f146dd4d180c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53e3a092d490ae6d52d957f7831b06f6"><td class="memItemLeft" align="right" valign="top"><a id="a53e3a092d490ae6d52d957f7831b06f6"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; CT &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a53e3a092d490ae6d52d957f7831b06f6">content_type</a></td></tr>
<tr class="memdesc:a53e3a092d490ae6d52d957f7831b06f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Content string set. <br /></td></tr>
<tr class="separator:a53e3a092d490ae6d52d957f7831b06f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a1f4b7a0360a2379728d94a468183d0"><td class="memItemLeft" align="right" valign="top"><a id="a2a1f4b7a0360a2379728d94a468183d0"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; V &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a2a1f4b7a0360a2379728d94a468183d0">query_variable</a></td></tr>
<tr class="memdesc:a2a1f4b7a0360a2379728d94a468183d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Query string set. <br /></td></tr>
<tr class="separator:a2a1f4b7a0360a2379728d94a468183d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af54b8c135e509f16f2c2a12777856fce"><td class="memItemLeft" align="right" valign="top"><a id="af54b8c135e509f16f2c2a12777856fce"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; V &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#af54b8c135e509f16f2c2a12777856fce">post_variable</a></td></tr>
<tr class="memdesc:af54b8c135e509f16f2c2a12777856fce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Post string set. <br /></td></tr>
<tr class="separator:af54b8c135e509f16f2c2a12777856fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74a1ca05d766c2aec5f17d326678d0b4"><td class="memItemLeft" align="right" valign="top"><a id="a74a1ca05d766c2aec5f17d326678d0b4"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_request_file_string_set.htm">HTTPRequestFileStringSet</a>&lt; FV &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a74a1ca05d766c2aec5f17d326678d0b4">post_file_variable</a></td></tr>
<tr class="memdesc:a74a1ca05d766c2aec5f17d326678d0b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Post file string set. <br /></td></tr>
<tr class="separator:a74a1ca05d766c2aec5f17d326678d0b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a138f7a346a7ecb5f97b1807177cdd41d"><td class="memItemLeft" align="right" valign="top"><a id="a138f7a346a7ecb5f97b1807177cdd41d"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; N &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a138f7a346a7ecb5f97b1807177cdd41d">header</a></td></tr>
<tr class="memdesc:a138f7a346a7ecb5f97b1807177cdd41d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Header strings. <br /></td></tr>
<tr class="separator:a138f7a346a7ecb5f97b1807177cdd41d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d91274b73d4c754106188c729f750ca"><td class="memItemLeft" align="right" valign="top"><a id="a8d91274b73d4c754106188c729f750ca"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_request_cookie_jar.htm">HTTPRequestCookieJar</a>&lt; CN &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a8d91274b73d4c754106188c729f750ca">cookie</a></td></tr>
<tr class="memdesc:a8d91274b73d4c754106188c729f750ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cookie strings. <br /></td></tr>
<tr class="separator:a8d91274b73d4c754106188c729f750ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aead2e9239c883aba938e11a653dde63d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#aead2e9239c883aba938e11a653dde63d">Error</a> (const <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a> e)</td></tr>
<tr class="memdesc:aead2e9239c883aba938e11a653dde63d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set error to be queried later by <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a>.  <a href="classghttp_1_1_h_t_t_p_request.htm#aead2e9239c883aba938e11a653dde63d">More...</a><br /></td></tr>
<tr class="separator:aead2e9239c883aba938e11a653dde63d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acca7e6e1d1e9ec6416f10ea5b87cb674"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#acca7e6e1d1e9ec6416f10ea5b87cb674">ProcessContent</a> (uint16_t i, const char *boundary_str)</td></tr>
<tr class="memdesc:acca7e6e1d1e9ec6416f10ea5b87cb674"><td class="mdescLeft">&#160;</td><td class="mdescRight">Build string set for post variables from content when type "multipart/form-data".  <a href="classghttp_1_1_h_t_t_p_request.htm#acca7e6e1d1e9ec6416f10ea5b87cb674">More...</a><br /></td></tr>
<tr class="separator:acca7e6e1d1e9ec6416f10ea5b87cb674"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f05ea6c3a4966db723ee2fc3c9f2066"><td class="memTemplParams" colspan="2">template&lt;uint8_t SSN&gt; </td></tr>
<tr class="memitem:a6f05ea6c3a4966db723ee2fc3c9f2066"><td class="memTemplItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a6f05ea6c3a4966db723ee2fc3c9f2066">BuildStringSet</a> (uint16_t i, <a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; SSN &gt; &amp;set, uint8_t base=0, uint32_t max_i=0, const bool skip_header_name=false)</td></tr>
<tr class="memdesc:a6f05ea6c3a4966db723ee2fc3c9f2066"><td class="mdescLeft">&#160;</td><td class="mdescRight">Build string set from a header where format expected "Header: param1[=value]; param2[=value]; param3[=value]..." and result string set is header data.  <a href="classghttp_1_1_h_t_t_p_request.htm#a6f05ea6c3a4966db723ee2fc3c9f2066">More...</a><br /></td></tr>
<tr class="separator:a6f05ea6c3a4966db723ee2fc3c9f2066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab90e9ba06fbf79542e8bd43a6f293ec7"><td class="memTemplParams" colspan="2">template&lt;uint8_t SSN&gt; </td></tr>
<tr class="memitem:ab90e9ba06fbf79542e8bd43a6f293ec7"><td class="memTemplItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab90e9ba06fbf79542e8bd43a6f293ec7">BuildStringSetParseVariables</a> (uint16_t i, <a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; SSN &gt; &amp;v, uint8_t base=0)</td></tr>
<tr class="memdesc:ab90e9ba06fbf79542e8bd43a6f293ec7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Build string set from GET/POST variables, latter when content type is "application/x-www-form-urlencoded".  <a href="classghttp_1_1_h_t_t_p_request.htm#ab90e9ba06fbf79542e8bd43a6f293ec7">More...</a><br /></td></tr>
<tr class="separator:ab90e9ba06fbf79542e8bd43a6f293ec7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classghttp_1_1_h_t_t_p_buffer"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classghttp_1_1_h_t_t_p_buffer')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm">ghttp::HTTPBuffer</a></td></tr>
<tr class="memitem:ad92fe71a7a36780718d9e044ab314c4a inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ad92fe71a7a36780718d9e044ab314c4a">FindEOL</a> (uint16_t i, uint16_t ei) const</td></tr>
<tr class="memdesc:ad92fe71a7a36780718d9e044ab314c4a inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find end of line.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#ad92fe71a7a36780718d9e044ab314c4a">More...</a><br /></td></tr>
<tr class="separator:ad92fe71a7a36780718d9e044ab314c4a inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3edcde6636f7e28e3fb2fd54dbb97cc inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#af3edcde6636f7e28e3fb2fd54dbb97cc">FindSubString</a> (uint16_t i, uint16_t ei, const char *str, uint16_t str_length_max=0) const</td></tr>
<tr class="memdesc:af3edcde6636f7e28e3fb2fd54dbb97cc inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for a substring, case sensitive.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#af3edcde6636f7e28e3fb2fd54dbb97cc">More...</a><br /></td></tr>
<tr class="separator:af3edcde6636f7e28e3fb2fd54dbb97cc inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a4f3bdf890006fe8d46d34ee163929a inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a7a4f3bdf890006fe8d46d34ee163929a">FindTerminator</a> (uint16_t i, const char *include_special, bool invert_special_only=false, uint16_t i_max=0) const</td></tr>
<tr class="memdesc:a7a4f3bdf890006fe8d46d34ee163929a inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find terminator characters.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a7a4f3bdf890006fe8d46d34ee163929a">More...</a><br /></td></tr>
<tr class="separator:a7a4f3bdf890006fe8d46d34ee163929a inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97cb111c718d0c26f0d1efc7b61efac7 inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a97cb111c718d0c26f0d1efc7b61efac7">FindSubString</a> (uint16_t i, uint16_t ei, PGM_VOID_P str, uint16_t str_length_max=0) const</td></tr>
<tr class="memdesc:a97cb111c718d0c26f0d1efc7b61efac7 inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Search for a substring, case sensitive.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a97cb111c718d0c26f0d1efc7b61efac7">More...</a><br /></td></tr>
<tr class="separator:a97cb111c718d0c26f0d1efc7b61efac7 inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80d3f2678d4517ec203098adaeab7668 inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a80d3f2678d4517ec203098adaeab7668">FindTerminator</a> (uint16_t i, PGM_VOID_P include_special, bool invert_special_only=false, uint16_t i_max=0) const</td></tr>
<tr class="memdesc:a80d3f2678d4517ec203098adaeab7668 inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Find terminator characters.  <a href="classghttp_1_1_h_t_t_p_buffer.htm#a80d3f2678d4517ec203098adaeab7668">More...</a><br /></td></tr>
<tr class="separator:a80d3f2678d4517ec203098adaeab7668 inherit pro_methods_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aad29184a4532f1e9bfaf279094d32d4f"><td class="memItemLeft" align="right" valign="top"><a id="aad29184a4532f1e9bfaf279094d32d4f"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#aad29184a4532f1e9bfaf279094d32d4f">port_</a></td></tr>
<tr class="memdesc:aad29184a4532f1e9bfaf279094d32d4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Received port number. <br /></td></tr>
<tr class="separator:aad29184a4532f1e9bfaf279094d32d4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b89a51323023a9b752baf43de5062e7"><td class="memItemLeft" align="right" valign="top"><a id="a1b89a51323023a9b752baf43de5062e7"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a1b89a51323023a9b752baf43de5062e7">content_length_</a></td></tr>
<tr class="memdesc:a1b89a51323023a9b752baf43de5062e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Content length (Bytes/ASCII characters) <br /></td></tr>
<tr class="separator:a1b89a51323023a9b752baf43de5062e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4341892bc2cde526b65b4796815717a"><td class="memItemLeft" align="right" valign="top"><a id="ae4341892bc2cde526b65b4796815717a"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ae4341892bc2cde526b65b4796815717a">eoh_index_</a></td></tr>
<tr class="memdesc:ae4341892bc2cde526b65b4796815717a"><td class="mdescLeft">&#160;</td><td class="mdescRight">End of headers index, setup by parser re-used in segmented parse operations. <br /></td></tr>
<tr class="separator:ae4341892bc2cde526b65b4796815717a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4d9cd2c6a554adb2f08ce36e5a91d3"><td class="memItemLeft" align="right" valign="top"><a id="a0b4d9cd2c6a554adb2f08ce36e5a91d3"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a0b4d9cd2c6a554adb2f08ce36e5a91d3">last_error_</a></td></tr>
<tr class="memdesc:a0b4d9cd2c6a554adb2f08ce36e5a91d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Last error. <br /></td></tr>
<tr class="separator:a0b4d9cd2c6a554adb2f08ce36e5a91d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf913c7a6e1c42863e112b7105afbc60"><td class="memItemLeft" align="right" valign="top"><a id="adf913c7a6e1c42863e112b7105afbc60"></a>
<a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; 6 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#adf913c7a6e1c42863e112b7105afbc60">tmp_</a></td></tr>
<tr class="memdesc:adf913c7a6e1c42863e112b7105afbc60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Temporary use string set. <br /></td></tr>
<tr class="separator:adf913c7a6e1c42863e112b7105afbc60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classghttp_1_1_h_t_t_p_buffer')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm">ghttp::HTTPBuffer</a></td></tr>
<tr class="memitem:af9c6fd75b8e2c829e43b086381e20b39 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="af9c6fd75b8e2c829e43b086381e20b39"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#af9c6fd75b8e2c829e43b086381e20b39">length_</a></td></tr>
<tr class="memdesc:af9c6fd75b8e2c829e43b086381e20b39 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data in buffer, length in characters. <br /></td></tr>
<tr class="separator:af9c6fd75b8e2c829e43b086381e20b39 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c35bfb11f81b600251c629fc55b61d0 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="a4c35bfb11f81b600251c629fc55b61d0"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#a4c35bfb11f81b600251c629fc55b61d0">max_length_</a></td></tr>
<tr class="memdesc:a4c35bfb11f81b600251c629fc55b61d0 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Maximum data in buffer in characters. <br /></td></tr>
<tr class="separator:a4c35bfb11f81b600251c629fc55b61d0 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0cbb4e3a4546ac49de67f1ba3756bda inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="ad0cbb4e3a4546ac49de67f1ba3756bda"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ad0cbb4e3a4546ac49de67f1ba3756bda">offset_</a></td></tr>
<tr class="memdesc:ad0cbb4e3a4546ac49de67f1ba3756bda inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Offset (characters) of unused head of buffer. <br /></td></tr>
<tr class="separator:ad0cbb4e3a4546ac49de67f1ba3756bda inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af63c63abb009ad0de97aee89ef979fd0 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memItemLeft" align="right" valign="top"><a id="af63c63abb009ad0de97aee89ef979fd0"></a>
char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#af63c63abb009ad0de97aee89ef979fd0">buffer_</a></td></tr>
<tr class="memdesc:af63c63abb009ad0de97aee89ef979fd0 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="mdescLeft">&#160;</td><td class="mdescRight">Character buffer pointer. <br /></td></tr>
<tr class="separator:af63c63abb009ad0de97aee89ef979fd0 inherit pro_attribs_classghttp_1_1_h_t_t_p_buffer"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt;<br />
class ghttp::HTTPRequest&lt; N, V, CT, FV, CN &gt;</h3>

<p>HTTP Request class with helpers to assist in the parsing of valid HTTP request messages, likely received over TCP/IP. </p>
<p>Refer: RFC 1738, RFC 7578 &amp; RFC 1867, RFC 6265, RFC 1735</p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">N</td><td>Maximum parsed headers </td></tr>
    <tr><td class="paramname">V</td><td>Maximum parsed POST/GET variables </td></tr>
    <tr><td class="paramname">CT</td><td>Maximum content type strings. Content type header broken down into strings </td></tr>
    <tr><td class="paramname">FV</td><td>Maximum parsed file POST variables. Exists if GHTTP_REQUEST_PROCESS_POST_FILE_VARS=1 </td></tr>
    <tr><td class="paramname">CN</td><td>Maximum cookies in Cookie jar. Exists if GHTTP_REQUEST_PROCESS_COOKIES=1 </td></tr>
  </table>
  </dd>
</dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="ghttp_static_request_parse_multipart_8ino-example.htm#_a1">ghttp_static_request_parse_multipart.ino</a>.</dd>
</dl>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="ab7806a3e6e80d7179322be3f9e55a76e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7806a3e6e80d7179322be3f9e55a76e">&#9670;&nbsp;</a></span>ERR</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ghttp::HTTPRequest::ERR</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enum of possible request parse errors. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea030eaf86bd425928d1897e1613e167b5"></a>ERR_NONE&#160;</td><td class="fielddoc"><p>0 - No error </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea2f591b8ae97ac1951ee6ee6b070ad982"></a>ERR_SEGMENTATION&#160;</td><td class="fielddoc"><p>1 - Parse information. More data expected </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea33589a8091fc3a037c437084ac7fabbd"></a>ERR_PARSE_EOF&#160;</td><td class="fielddoc"><p>2 - Parse error. End of File =&gt; to much data sent from host </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea66cd3a56dfa17d2503463f388c3a454e"></a>ERR_PARSE_BAD_FIRST_LINE_SOL&#160;</td><td class="fielddoc"><p>3 - Parse error. First line contained unexpected data at SOL </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea2b548a43f7d6cd0eff8f4091f5c6a651"></a>ERR_PARSE_BAD_METHOD&#160;</td><td class="fielddoc"><p>4 - Parse error. Bad method string </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea590d8981d5efa9e33982bfbf4e6e4ac2"></a>ERR_PARSE_BAD_URL&#160;</td><td class="fielddoc"><p>5 - Parse error. Bad URL string </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eac0dd4f757e2f3cab80159bfb9987a950"></a>ERR_PARSE_BAD_GET_PARAM_NAME&#160;</td><td class="fielddoc"><p>6 - Parse error. Bad GET parameter name </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea97411748eed7816ada89724ca046ee99"></a>ERR_PARSE_BAD_GET_PARAM_VALUE&#160;</td><td class="fielddoc"><p>7 - Parse error. Bad GET parameter value </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eaeeb2b92d7605d66416b0c02e79ecae83"></a>ERR_PARSE_BAD_GET_PARAM_TO_MANY&#160;</td><td class="fielddoc"><p>8 - Parse error. To many GET parameters </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea338c1b9925e3b6c58082646043ea5070"></a>ERR_PARSE_BAD_PROTOCOL&#160;</td><td class="fielddoc"><p>9 - Parse error. Bad protocol string </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea9309d504ab8ad7447e65cfa741f2ec21"></a>ERR_PARSE_BAD_PROTOCOL_VERSION&#160;</td><td class="fielddoc"><p>10 - Parse error. Bad protocol version string </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea74a87ed891720da5c3c0df96ee56cd5a"></a>ERR_PARSE_BAD_FIRST_LINE_NO_EOL&#160;</td><td class="fielddoc"><p>11 - Parse error. Bad first line, termination of </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eacba620c9f5f04fd66cc6c515e3bb1d34"></a>ERR_PARSE_BAD_HEADER_LINE_SOL&#160;</td><td class="fielddoc"><p>12 - Parse error. Bad header line string, unexpect data at SOL </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eaa2a7b9c5b5cf08580e0a4ecb9cd6737d"></a>ERR_PARSE_BAD_HEADER_LINE_NAME&#160;</td><td class="fielddoc"><p>13 - Parse error. Bad header line string at attribute name </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea23278da017ab157c3536132cb4b2edbb"></a>ERR_PARSE_BAD_HEADER_LINE_VALUE&#160;</td><td class="fielddoc"><p>14 - Parse error. Bad header line string at value </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eae9ede3d08d5483d9ad63bda45fdfa0ee"></a>ERR_PARSE_HEADER_LIMIT&#160;</td><td class="fielddoc"><p>15 - Parse error. Header string limit reached when appending data </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ead5e0d118d13f2b65dab99b12cfb62ee9"></a>ERR_PARSE_BAD_HEADER_LINE_NO_EOL&#160;</td><td class="fielddoc"><p>16 - Parse error. Bad header line, termination of </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eae53ff981f4fe7186c3a402dcfc0e0447"></a>ERR_PARSE_UNEXPECTED_DATA&#160;</td><td class="fielddoc"><p>17 - Parse error. To much data in request buffer </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea0d19914b6f48abdf0f4e2a8e917902cb"></a>ERR_PARSE_CONTENT_LENGTH_MISMATCH&#160;</td><td class="fielddoc"><p>18 - Parse error. Content length header string differs from actual (read) content length </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ead19faf40e062229b547ce23d583213bf"></a>ERR_PARSE_BAD_COOKIE_NAME&#160;</td><td class="fielddoc"><p>19 - Parse error. Processing header, bad cookie name found </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea0f0743cd79b1bc7d5ae961153dc6fed5"></a>ERR_PARSE_BAD_COOKIE_VALUE&#160;</td><td class="fielddoc"><p>20 - Parse error. Processing header, bad cookie value found </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ead9a600c438a976355b8fab73e437ad90"></a>ERR_PARSE_BAD_COOKIE_TO_MANY&#160;</td><td class="fielddoc"><p>21 - Parse error. Processing header, to many cookies in set cannot add more </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea9c226931afe0b16c0e524758579f834c"></a>ERR_PARSE_BAD_POST_PARAM_NAME&#160;</td><td class="fielddoc"><p>22 - Parse error. Bad POST parameter name </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eafc69a01ca888971abe5bac484b5c0368"></a>ERR_PARSE_BAD_POST_PARAM_VALUE&#160;</td><td class="fielddoc"><p>23 - Parse error. Bad POST parameter value </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eaa735a15118339104b3de068c137b9400"></a>ERR_PARSE_BAD_POST_PARAM_TO_MANY&#160;</td><td class="fielddoc"><p>24 - Parse error. To many POST parameters, cannot add more </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eac3591822f80ddd5d301031acbd81676a"></a>ERR_PARSE_BAD_POST_FILE_PARAM_TO_MANY&#160;</td><td class="fielddoc"><p>25 - Parse error. To many POST FILE parameters, cannot add more </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea239f6cafd273456d33caf26af478ae04"></a>ERR_PARSE_BAD_CTYPE_NAME&#160;</td><td class="fielddoc"><p>26 - Parse error. Bad content type parameter name </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76eaa9f1dfb0a8bbbca9636a551fd4e7df85"></a>ERR_PARSE_BAD_CTYPE_VALUE&#160;</td><td class="fielddoc"><p>27 - Parse error. Bad content type parameter value </p>
</td></tr>
<tr><td class="fieldname"><a id="ab7806a3e6e80d7179322be3f9e55a76ea65684557d691b33e43ffa3f4d1c817da"></a>ERR_PARSE_BAD_CTYPE_TO_MANY&#160;</td><td class="fielddoc"><p>28 - Parse error. To many content type parameters, cannot add more </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a11963e969fbd5acbf446184131d983cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11963e969fbd5acbf446184131d983cd">&#9670;&nbsp;</a></span>HTTPRequest()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::<a class="el" href="classghttp_1_1_h_t_t_p_request.htm">HTTPRequest</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor, make stable instance. </p>
<p>Defaults NULL strings, port 80 and no error </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6f05ea6c3a4966db723ee2fc3c9f2066"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f05ea6c3a4966db723ee2fc3c9f2066">&#9670;&nbsp;</a></span>BuildStringSet()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<div class="memtemplate">
template&lt;uint8_t SSN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t <a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::BuildStringSet </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; SSN &gt; &amp;&#160;</td>
          <td class="paramname"><em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>base</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint32_t&#160;</td>
          <td class="paramname"><em>max_i</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>skip_header_name</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Build string set from a header where format expected "Header: param1[=value]; param2[=value]; param3[=value]..." and result string set is header data. </p>
<dl class="section note"><dt>Note</dt><dd>set.count isn't zeroed so can accumulate with multiple invokes of this function, useful when making multiple headers accessible from the same set</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">SSN</td><td>String set maximum </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Start index of header string. If skip_header_name false it should after colon otherwise will internally find and skip </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">set</td><td>Reference to string set to build/append to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">base</td><td>Error code base for reporting correctly the errors found for different sets, default 0 (errors not reported via <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a>) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">max_i</td><td>Maximum index where set building should terminate, default 0 =&gt; max_i = <a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#aeeb9acdefa93179e395c6c7d7d001244" title="Get length.">HTTPBuffer::GetLength</a> </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">skip_header_name</td><td>Flag indicating when true that index i points to entire header and that the name should be skipped, default false </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Last position processed within buffer (character index). Upon error condition where <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a> indicates failure the index may help </dd></dl>

</div>
</div>
<a id="ab90e9ba06fbf79542e8bd43a6f293ec7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab90e9ba06fbf79542e8bd43a6f293ec7">&#9670;&nbsp;</a></span>BuildStringSetParseVariables()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<div class="memtemplate">
template&lt;uint8_t SSN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t <a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::BuildStringSetParseVariables </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classghttp_1_1_h_t_t_p_attr_value_string_set.htm">HTTPAttrValueStringSet</a>&lt; SSN &gt; &amp;&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>base</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Build string set from GET/POST variables, latter when content type is "application/x-www-form-urlencoded". </p>
<p>Format of URL encoded data is paramName1=paramValue1[&amp;paramName2[=paramValue2]...] (= or =</p>
<p>is optional)</p>
<dl class="section note"><dt>Note</dt><dd>set.count isn't zeroed so can accumulate with multiple invokes</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">SSN</td><td>String set maximum </td></tr>
  </table>
  </dd>
</dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Start index of header string. If skip_header_name false it should after colon otherwise will internally find and skip </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">v</td><td>Reference to string set to build/append to </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">base</td><td>Error code base for reporting correctly the errors found for different sets, default 0 (errors not reported via <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a>) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Last position processed within buffer (character index). Upon error condition where <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a> indicates failure the index may help </dd></dl>

</div>
</div>
<a id="aead2e9239c883aba938e11a653dde63d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aead2e9239c883aba938e11a653dde63d">&#9670;&nbsp;</a></span>Error()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::Error </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a>&#160;</td>
          <td class="paramname"><em>e</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set error to be queried later by <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a>. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">e</td><td>Error from <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a> </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aeb2c83afa0323f15041def685227fe58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb2c83afa0323f15041def685227fe58">&#9670;&nbsp;</a></span>GetContentLength()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t <a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::GetContentLength </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get content length. </p>
<dl class="section note"><dt>Note</dt><dd>Only valid if <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab0a4f01bfba2cb2a460440c0001a1303">Parse</a> invoked prior</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Characters/Octets </dd></dl>

</div>
</div>
<a id="a762b73d5273c2ccf934734c0bb98dda2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a762b73d5273c2ccf934734c0bb98dda2">&#9670;&nbsp;</a></span>GetLastError()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a> <a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::GetLastError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get last error. </p>
<dl class="section return"><dt>Returns</dt><dd>Error numeric, <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76e">ERR</a> </dd></dl>

</div>
</div>
<a id="ab0a4f01bfba2cb2a460440c0001a1303"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0a4f01bfba2cb2a460440c0001a1303">&#9670;&nbsp;</a></span>Parse()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t <a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::Parse </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>request_buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>max_length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>parse_content</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>segmentation</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Request parse. </p>
<p>Invoke <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a> post parse, upon successful parse the error will be ERR::ERR_NONE. A special case for error reporting where ERR::ERR_SEGMENTATION is given when there isn't enough data which includes the case where content length is specified as a header and the entire request doesn't meet that length.</p>
<dl class="section attention"><dt>Attention</dt><dd>If segmentation used. Before the start of receiving a new request or at the end of processing a response using the same buffer, caller should invoke <a class="el" href="classghttp_1_1_h_t_t_p_buffer.htm#ac0ef2438e1c7ae3953641b6fa310cddb">HTTPBuffer::Clear()</a> in order to indicate the start of a new request otherwise data will be assumed segmented and part of the same request</dd></dl>
<dl class="section note"><dt>Note</dt><dd>Flag parse_content has no affect if GHTTP_REQUEST_PROCESS_POST_VARS isn't defined. It will be set to false internally if HTTP version &lt; 1.0 as only GET requests with no content length are supported</dd>
<dd>
Using segmentation means ERR::ERR_PARSE_CONTENT_LENGTH_MISMATCH only occurs when there is to much data received and content length header present for HTTP version &gt;=1.0 otherwise ERR::ERR_SEGMENTATION is given</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000001">Todo:</a></b></dt><dd>Refactor as statemachine</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">request_buffer</td><td>Request buffer pointer (Maybe NULL terminated) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">length</td><td>Request buffer length (characters, not including NULL) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">max_length</td><td>Request buffer maximum length (characters, including NULL) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">parse_content</td><td>Flag indicating content should also be parsed. Default true =&gt; POST variables are parsed if enabled through macros </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">segmentation</td><td>Flag indicating the request maybe be segmented and a caller is expecting feedback from Parser to decide what to do with network activity (default true). Set to false if you expect a single invoke per request and the entire request should exist in buffer. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Last position parsed within buffer (character index). Upon error condition where <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a> indicates failure the index may help </dd></dl>

</div>
</div>
<a id="acca7e6e1d1e9ec6416f10ea5b87cb674"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acca7e6e1d1e9ec6416f10ea5b87cb674">&#9670;&nbsp;</a></span>ProcessContent()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t N, uint8_t V, uint8_t CT, uint8_t FV, uint8_t CN&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t <a class="el" href="classghttp_1_1_h_t_t_p_request.htm">ghttp::HTTPRequest</a>&lt; N, V, CT, FV, CN &gt;::ProcessContent </td>
          <td>(</td>
          <td class="paramtype">uint16_t&#160;</td>
          <td class="paramname"><em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>boundary_str</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Build string set for post variables from content when type "multipart/form-data". </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">i</td><td>Start index of content into buffer </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">boundary_str</td><td>Boundary string taken from content type header. This is data only not entire header </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Last position processed within buffer (character index). Upon error condition where <a class="el" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a> indicates failure the index may help </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>ghttp</b></li><li class="navelem"><a class="el" href="classghttp_1_1_h_t_t_p_request.htm">HTTPRequest</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 14:59:57 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
