<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: ghttp::MIMEBase64 Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-e1d212a(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classghttp_1_1_m_i_m_e_base64.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="classghttp_1_1_m_i_m_e_base64-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ghttp::MIMEBase64 Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A class representing a Mime Base64 implementation loosely covering RFC 2045.  
 <a href="classghttp_1_1_m_i_m_e_base64.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="ghttp__mimebase64_8h_source.htm">support/ghttp_mimebase64.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structghttp_1_1_m_i_m_e_base64_1_1bitstream__t.htm">bitstream_t</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">ADT used to seperate and build Base64 characters against CPU sized opaque (POD) type.  <a href="structghttp_1_1_m_i_m_e_base64_1_1bitstream__t.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:af9cefdac7f070394e2c262e9ec20c18c"><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#af9cefdac7f070394e2c262e9ec20c18c">Encode</a> (const char *s, char *d, const uint16_t d_len, const uint16_t s_len=0)</td></tr>
<tr class="memdesc:af9cefdac7f070394e2c262e9ec20c18c"><td class="mdescLeft">&#160;</td><td class="mdescRight">ASCII string encode into Base64.  <a href="classghttp_1_1_m_i_m_e_base64.htm#af9cefdac7f070394e2c262e9ec20c18c">More...</a><br /></td></tr>
<tr class="separator:af9cefdac7f070394e2c262e9ec20c18c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23f17d0dc99e9ec0c1c4c4e468e5db38"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#a23f17d0dc99e9ec0c1c4c4e468e5db38">GetEncodeLength</a> (const char *s, const uint16_t s_len=0)</td></tr>
<tr class="memdesc:a23f17d0dc99e9ec0c1c4c4e468e5db38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get ASCII to Base64 encode length.  <a href="classghttp_1_1_m_i_m_e_base64.htm#a23f17d0dc99e9ec0c1c4c4e468e5db38">More...</a><br /></td></tr>
<tr class="separator:a23f17d0dc99e9ec0c1c4c4e468e5db38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae92bf767427d19b6698a46b1d361eb3f"><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#ae92bf767427d19b6698a46b1d361eb3f">Decode</a> (const char *s, char *d, const uint16_t d_len, const uint16_t s_len=0)</td></tr>
<tr class="memdesc:ae92bf767427d19b6698a46b1d361eb3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base64 decode into ASCII string.  <a href="classghttp_1_1_m_i_m_e_base64.htm#ae92bf767427d19b6698a46b1d361eb3f">More...</a><br /></td></tr>
<tr class="separator:ae92bf767427d19b6698a46b1d361eb3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa977cb12d5e6671c636b401293fee8f2"><td class="memItemLeft" align="right" valign="top">static uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#aa977cb12d5e6671c636b401293fee8f2">GetDecodeLength</a> (const char *d, const uint16_t d_len=0)</td></tr>
<tr class="memdesc:aa977cb12d5e6671c636b401293fee8f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get Base64 to ASCII decode length.  <a href="classghttp_1_1_m_i_m_e_base64.htm#aa977cb12d5e6671c636b401293fee8f2">More...</a><br /></td></tr>
<tr class="separator:aa977cb12d5e6671c636b401293fee8f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:a234cd0d6fb165e0023eb89e02672c690"><td class="memItemLeft" align="right" valign="top">static uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#a234cd0d6fb165e0023eb89e02672c690">IndexFromASCII</a> (const char c)</td></tr>
<tr class="memdesc:a234cd0d6fb165e0023eb89e02672c690"><td class="mdescLeft">&#160;</td><td class="mdescRight">Translate an ASCII character to Base64 alphabet used for decode operations.  <a href="classghttp_1_1_m_i_m_e_base64.htm#a234cd0d6fb165e0023eb89e02672c690">More...</a><br /></td></tr>
<tr class="separator:a234cd0d6fb165e0023eb89e02672c690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25733ce3f408fd4794bcc1b53a16f497"><td class="memItemLeft" align="right" valign="top">static char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#a25733ce3f408fd4794bcc1b53a16f497">ASCIIFromIndex</a> (const uint8_t a)</td></tr>
<tr class="memdesc:a25733ce3f408fd4794bcc1b53a16f497"><td class="mdescLeft">&#160;</td><td class="mdescRight">Translate a Base64 alphabet index into an ASCII character used for encode operations.  <a href="classghttp_1_1_m_i_m_e_base64.htm#a25733ce3f408fd4794bcc1b53a16f497">More...</a><br /></td></tr>
<tr class="separator:a25733ce3f408fd4794bcc1b53a16f497"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A class representing a Mime Base64 implementation loosely covering RFC 2045. </p>
<p>Refer: <a href="https://en.wikipedia.org/wiki/Base64">https://en.wikipedia.org/wiki/Base64</a> </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a25733ce3f408fd4794bcc1b53a16f497"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25733ce3f408fd4794bcc1b53a16f497">&#9670;&nbsp;</a></span>ASCIIFromIndex()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static char ghttp::MIMEBase64::ASCIIFromIndex </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>a</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Translate a Base64 alphabet index into an ASCII character used for encode operations. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">a</td><td>Base64 character code/index </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ASCII character </dd></dl>

</div>
</div>
<a id="ae92bf767427d19b6698a46b1d361eb3f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae92bf767427d19b6698a46b1d361eb3f">&#9670;&nbsp;</a></span>Decode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static char* ghttp::MIMEBase64::Decode </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>d_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>s_len</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Base64 decode into ASCII string. </p>
<p>Example encode would be "SGVsbDAgV29yMWQ=" =&gt; "Hell0 Wor1d"</p>
<dl class="section note"><dt>Note</dt><dd>Decoded length will always be smaller than encoded length. For pre-allocation <a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#aa977cb12d5e6671c636b401293fee8f2">GetDecodeLength</a></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Source Base64 string pointer (NULL terminated) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">d</td><td>Destination ASCII string pointer (will be NULL terminated) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d_len</td><td>Length of destination string buffer (Bytes/Characters) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s_len</td><td>Length of source string (Bytes, not including NULL), default 0 =&gt; strlen(s) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Destination string pointer </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="ghttp_static_request_parse_text_base64_8ino-example.htm#a2">ghttp_static_request_parse_text_base64.ino</a>.</dd>
</dl>

</div>
</div>
<a id="af9cefdac7f070394e2c262e9ec20c18c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9cefdac7f070394e2c262e9ec20c18c">&#9670;&nbsp;</a></span>Encode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static char* ghttp::MIMEBase64::Encode </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>d_len</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>s_len</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>ASCII string encode into Base64. </p>
<p>Example encode would be "Hell0 Wor1d" =&gt; "SGVsbDAgV29yMWQ="</p>
<dl class="section note"><dt>Note</dt><dd>Encoded length will always be larger than decoded length. For pre-allocation <a class="el" href="classghttp_1_1_m_i_m_e_base64.htm#a23f17d0dc99e9ec0c1c4c4e468e5db38">GetEncodeLength</a></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Source ASCII string pointer (NULL terminated) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">d</td><td>Destination Base64 string pointer (will be NULL terminated) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d_len</td><td>Length of destination string buffer (Bytes/Characters) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s_len</td><td>Length of source ASCII string, characters (not including NULL), default 0 =&gt; strlen(s) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Destination string pointer </dd></dl>

</div>
</div>
<a id="aa977cb12d5e6671c636b401293fee8f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa977cb12d5e6671c636b401293fee8f2">&#9670;&nbsp;</a></span>GetDecodeLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint16_t ghttp::MIMEBase64::GetDecodeLength </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>d</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>d_len</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get Base64 to ASCII decode length. </p>
<p>Example encode "SGVsbDAgV29yMWQ=" length would be 11</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">d</td><td>Base64 string pointer (NULL terminated) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">d_len</td><td>Length of source (Bytes) (not including NULL), default 0 =&gt; strlen(s) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>ASCII character count. Doesn't include a NULL if left as string </dd></dl>

</div>
</div>
<a id="a23f17d0dc99e9ec0c1c4c4e468e5db38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23f17d0dc99e9ec0c1c4c4e468e5db38">&#9670;&nbsp;</a></span>GetEncodeLength()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint16_t ghttp::MIMEBase64::GetEncodeLength </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>s_len</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get ASCII to Base64 encode length. </p>
<p>Example encode "Hell0 Wor1d" length would be 16</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Source ASCII string pointer (NULL terminated) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s_len</td><td>Length of source ASCII string, characters (not including NULL), default 0 =&gt; strlen(s) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Base64 character count in Bytes. Doesn't include a NULL if left as string </dd></dl>

</div>
</div>
<a id="a234cd0d6fb165e0023eb89e02672c690"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a234cd0d6fb165e0023eb89e02672c690">&#9670;&nbsp;</a></span>IndexFromASCII()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static uint8_t ghttp::MIMEBase64::IndexFromASCII </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Translate an ASCII character to Base64 alphabet used for decode operations. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">c</td><td>ASCII character </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Base64 character code/index </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>ghttp</b></li><li class="navelem"><a class="el" href="classghttp_1_1_m_i_m_e_base64.htm">MIMEBase64</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 16:37:30 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
