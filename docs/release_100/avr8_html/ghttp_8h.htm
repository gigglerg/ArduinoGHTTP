<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: ghttp.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-e1d212a(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('ghttp_8h.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a>  </div>
  <div class="headertitle">
<div class="title">ghttp.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;avr/io.h&gt;</code><br />
<code>#include &lt;avr/pgmspace.h&gt;</code><br />
<code>#include &quot;<a class="el" href="ghttp__stringhelper_8h_source.htm">support/ghttp_stringhelper.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__ip4_8h_source.htm">support/ghttp_ip4.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__mac_8h_source.htm">support/ghttp_mac.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__stopwatch_8h_source.htm">support/ghttp_stopwatch.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__mimebase64_8h_source.htm">support/ghttp_mimebase64.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__uri_8h_source.htm">support/ghttp_uri.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpsubstring_8h_source.htm">substring/ghttp_httpsubstring.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpattrvaluestring_8h_source.htm">substring/ghttp_httpattrvaluestring.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpattrvaluestringsetgeneric_8h_source.htm">substring/ghttp_httpattrvaluestringsetgeneric.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpattrvaluestringset_8h_source.htm">substring/ghttp_httpattrvaluestringset.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpattrfilestring_8h_source.htm">substring/ghttp_httpattrfilestring.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httprequestcookiejar_8h_source.htm">substring/ghttp_httprequestcookiejar.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httprequestfilestringset_8h_source.htm">substring/ghttp_httprequestfilestringset.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__sessionrnd_8h_source.htm">session/ghttp_sessionrnd.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__sessionid_8h_source.htm">session/ghttp_sessionid.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__session_8h_source.htm">session/ghttp_session.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__sessionmgr_8h_source.htm">session/ghttp_sessionmgr.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__route_8h_source.htm">route/ghttp_route.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__routemanager_8h_source.htm">route/ghttp_routemanager.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpbuffer_8h_source.htm">core/ghttp_httpbuffer.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httprequest_8h_source.htm">core/ghttp_httprequest.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpresponsestatus_8h_source.htm">core/ghttp_httpresponsestatus.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httpresponse_8h_source.htm">core/ghttp_httpresponse.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="ghttp__httphelper_8h_source.htm">core/ghttp_httphelper.h</a>&quot;</code><br />
</div>
<p><a href="ghttp_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a16a0f7e7053a679c9bf4289b441a2be7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(x)&#160;&#160;&#160;(static_cast&lt;PGM_VOID_P&gt;(PSTR(x)))</td></tr>
<tr class="memdesc:a16a0f7e7053a679c9bf4289b441a2be7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Text marco.  <a href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">More...</a><br /></td></tr>
<tr class="separator:a16a0f7e7053a679c9bf4289b441a2be7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37196cf08a64597afdbddd552611e5fe"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a37196cf08a64597afdbddd552611e5fe">PGM_CHAR</a>(x)&#160;&#160;&#160;static_cast&lt;char&gt;(pgm_read_byte_near((uint16_t)x))</td></tr>
<tr class="memdesc:a37196cf08a64597afdbddd552611e5fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Read character from AVR flash memory.  <a href="ghttp_8h.htm#a37196cf08a64597afdbddd552611e5fe">More...</a><br /></td></tr>
<tr class="separator:a37196cf08a64597afdbddd552611e5fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6b66a4eea341e5050580e68bfbc3745"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#ae6b66a4eea341e5050580e68bfbc3745">PGM_STRLEN</a>(x)&#160;&#160;&#160;strlen_P(x)</td></tr>
<tr class="memdesc:ae6b66a4eea341e5050580e68bfbc3745"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get string length from AVR flash memory string.  <a href="ghttp_8h.htm#ae6b66a4eea341e5050580e68bfbc3745">More...</a><br /></td></tr>
<tr class="separator:ae6b66a4eea341e5050580e68bfbc3745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae98d5cd4c4cd330228bc55de5640aaf5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#ae98d5cd4c4cd330228bc55de5640aaf5">PGM_STRNLEN</a>(x,  s)&#160;&#160;&#160;strnlen_P(x,s)</td></tr>
<tr class="memdesc:ae98d5cd4c4cd330228bc55de5640aaf5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get string length from AVR flash memory string with maximum length.  <a href="ghttp_8h.htm#ae98d5cd4c4cd330228bc55de5640aaf5">More...</a><br /></td></tr>
<tr class="separator:ae98d5cd4c4cd330228bc55de5640aaf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a7a5aa920ea4f3366b3f339a9bf5d37"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a4a7a5aa920ea4f3366b3f339a9bf5d37">PGM_STRCAT</a>(x,  y)&#160;&#160;&#160;strcat_P(x,y)</td></tr>
<tr class="memdesc:a4a7a5aa920ea4f3366b3f339a9bf5d37"><td class="mdescLeft">&#160;</td><td class="mdescRight">String concatenate from AVR flash memory string.  <a href="ghttp_8h.htm#a4a7a5aa920ea4f3366b3f339a9bf5d37">More...</a><br /></td></tr>
<tr class="separator:a4a7a5aa920ea4f3366b3f339a9bf5d37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfb632669c1b54869f00e2340220c0bf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#acfb632669c1b54869f00e2340220c0bf">PGM_MEMCPY</a>(x,  y,  s)&#160;&#160;&#160;memcpy_P(x,y,s)</td></tr>
<tr class="memdesc:acfb632669c1b54869f00e2340220c0bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Memory copy from AVR flash memory string.  <a href="ghttp_8h.htm#acfb632669c1b54869f00e2340220c0bf">More...</a><br /></td></tr>
<tr class="separator:acfb632669c1b54869f00e2340220c0bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b3d4acc5125bbdaf040747f42f05b91"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a7b3d4acc5125bbdaf040747f42f05b91">PGM_STRCPY</a>(x,  y,  s)&#160;&#160;&#160;strcpy_P(x,y,s)</td></tr>
<tr class="memdesc:a7b3d4acc5125bbdaf040747f42f05b91"><td class="mdescLeft">&#160;</td><td class="mdescRight">String copy from AVR flash memory string.  <a href="ghttp_8h.htm#a7b3d4acc5125bbdaf040747f42f05b91">More...</a><br /></td></tr>
<tr class="separator:a7b3d4acc5125bbdaf040747f42f05b91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb0af5cd857ba281813259c0ad82d694"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#adb0af5cd857ba281813259c0ad82d694">GHTTP_STOPWATCH_MS_TICKER_READ</a>&#160;&#160;&#160;millis()</td></tr>
<tr class="memdesc:adb0af5cd857ba281813259c0ad82d694"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro defined to give StopWatch class a system ticker source.  <a href="ghttp_8h.htm#adb0af5cd857ba281813259c0ad82d694">More...</a><br /></td></tr>
<tr class="separator:adb0af5cd857ba281813259c0ad82d694"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a928c2294d364adcd227ec40b1a6021"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a5a928c2294d364adcd227ec40b1a6021">GHTTP_SESSIONRND_GENERATE</a>(n)&#160;&#160;&#160;SessionRnd&lt;n&gt;::Generate()</td></tr>
<tr class="memdesc:a5a928c2294d364adcd227ec40b1a6021"><td class="mdescLeft">&#160;</td><td class="mdescRight">Random session ID generation, string length.  <a href="ghttp_8h.htm#a5a928c2294d364adcd227ec40b1a6021">More...</a><br /></td></tr>
<tr class="separator:a5a928c2294d364adcd227ec40b1a6021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a368631586d10c1e522e66f134c133331"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a368631586d10c1e522e66f134c133331">GHTTP_SESSIONRND_ENTROPHY_SRC1</a>&#160;&#160;&#160;millis()</td></tr>
<tr class="memdesc:a368631586d10c1e522e66f134c133331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Random session entrophy source 1.  <a href="ghttp_8h.htm#a368631586d10c1e522e66f134c133331">More...</a><br /></td></tr>
<tr class="separator:a368631586d10c1e522e66f134c133331"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad253e7cf8ef247c14224de0d7ab2b49"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a>&#160;&#160;&#160;analogRead(A7)</td></tr>
<tr class="memdesc:aad253e7cf8ef247c14224de0d7ab2b49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Random session entrophy source 2.  <a href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">More...</a><br /></td></tr>
<tr class="separator:aad253e7cf8ef247c14224de0d7ab2b49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11edfcb42daa43c7843ae15b0f1a5b92"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a11edfcb42daa43c7843ae15b0f1a5b92">GHTTP_SESSIONID_LENGTH</a>&#160;&#160;&#160;33</td></tr>
<tr class="memdesc:a11edfcb42daa43c7843ae15b0f1a5b92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific session id string length, characters (including NULL)  <a href="ghttp_8h.htm#a11edfcb42daa43c7843ae15b0f1a5b92">More...</a><br /></td></tr>
<tr class="separator:a11edfcb42daa43c7843ae15b0f1a5b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86554cab77ea271f91ca2bd131aaf0cf"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a86554cab77ea271f91ca2bd131aaf0cf">GHTTP_SESSION_EXPIRE_TIME</a>&#160;&#160;&#160;(60*30)</td></tr>
<tr class="memdesc:a86554cab77ea271f91ca2bd131aaf0cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific macro defines a session instance timeout in Seconds.  <a href="ghttp_8h.htm#a86554cab77ea271f91ca2bd131aaf0cf">More...</a><br /></td></tr>
<tr class="separator:a86554cab77ea271f91ca2bd131aaf0cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0cca86144fb42f31e6393771ea1ab12"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#ab0cca86144fb42f31e6393771ea1ab12">GHTTP_SESSIONMGR_MAX_SESSIONS</a>&#160;&#160;&#160;10</td></tr>
<tr class="memdesc:ab0cca86144fb42f31e6393771ea1ab12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro to include MAC address in Session management otherwise simplify to use IP.  <a href="ghttp_8h.htm#ab0cca86144fb42f31e6393771ea1ab12">More...</a><br /></td></tr>
<tr class="separator:ab0cca86144fb42f31e6393771ea1ab12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ad44e79b057326c71b4dfefe773c9a1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a8ad44e79b057326c71b4dfefe773c9a1">GHTTP_REQUEST_MAX_HEADERS</a>&#160;&#160;&#160;25</td></tr>
<tr class="memdesc:a8ad44e79b057326c71b4dfefe773c9a1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific macro to define upper limit on request header strings.  <a href="ghttp_8h.htm#a8ad44e79b057326c71b4dfefe773c9a1">More...</a><br /></td></tr>
<tr class="separator:a8ad44e79b057326c71b4dfefe773c9a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71cb1a9de26649981433aa532d612cc1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a71cb1a9de26649981433aa532d612cc1">GHTTP_REQUEST_MAX_VARS</a>&#160;&#160;&#160;10</td></tr>
<tr class="memdesc:a71cb1a9de26649981433aa532d612cc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro to define upper limit on request query and post strings (GET/POST variables).  <a href="ghttp_8h.htm#a71cb1a9de26649981433aa532d612cc1">More...</a><br /></td></tr>
<tr class="separator:a71cb1a9de26649981433aa532d612cc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace1043fdbf955ffdbe408962037309bc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#ace1043fdbf955ffdbe408962037309bc">GHTTP_REQUEST_MAX_CONTENT_TYPE</a>&#160;&#160;&#160;4</td></tr>
<tr class="memdesc:ace1043fdbf955ffdbe408962037309bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro to define upper limit on request content substrings.  <a href="ghttp_8h.htm#ace1043fdbf955ffdbe408962037309bc">More...</a><br /></td></tr>
<tr class="separator:ace1043fdbf955ffdbe408962037309bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2720d295556b96d0cfa46864141a00a7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a2720d295556b96d0cfa46864141a00a7">GHTTP_REQUEST_MAX_POST_FILE</a>&#160;&#160;&#160;3</td></tr>
<tr class="memdesc:a2720d295556b96d0cfa46864141a00a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific macro to define upper limit on request post files variables.  <a href="ghttp_8h.htm#a2720d295556b96d0cfa46864141a00a7">More...</a><br /></td></tr>
<tr class="separator:a2720d295556b96d0cfa46864141a00a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2821caf2ca2b2b0aebee1bdc496ffcd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#af2821caf2ca2b2b0aebee1bdc496ffcd">GHTTP_REQUEST_MAX_COOKIE</a>&#160;&#160;&#160;15</td></tr>
<tr class="memdesc:af2821caf2ca2b2b0aebee1bdc496ffcd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific macro sets the maximum cookies decoded by request.  <a href="ghttp_8h.htm#af2821caf2ca2b2b0aebee1bdc496ffcd">More...</a><br /></td></tr>
<tr class="separator:af2821caf2ca2b2b0aebee1bdc496ffcd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15ebc4a4b1455507fb07a13bc53a4c8d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a15ebc4a4b1455507fb07a13bc53a4c8d">GHTTP_SERVER_MAX_ROUTES</a>&#160;&#160;&#160;10</td></tr>
<tr class="memdesc:a15ebc4a4b1455507fb07a13bc53a4c8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Application specific macro sets the maximum routes handled by route manager (the HTTP server)  <a href="ghttp_8h.htm#a15ebc4a4b1455507fb07a13bc53a4c8d">More...</a><br /></td></tr>
<tr class="separator:a15ebc4a4b1455507fb07a13bc53a4c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3639f334469ac9b3053cff45e26de565"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a3639f334469ac9b3053cff45e26de565">GHTTP_SERVER_ACCEPT_AUTHORIZATION</a>&#160;&#160;&#160;0</td></tr>
<tr class="memdesc:a3639f334469ac9b3053cff45e26de565"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro specifies if server accepts HTTP authorization (type basic parsed by request).  <a href="ghttp_8h.htm#a3639f334469ac9b3053cff45e26de565">More...</a><br /></td></tr>
<tr class="separator:a3639f334469ac9b3053cff45e26de565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e819b6cda76373498762317895b4b5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="ghttp_8h.htm#a04e819b6cda76373498762317895b4b5">GHTTP_SERVER_AUTHORIZATION_REUSE_VARS</a>&#160;&#160;&#160;0</td></tr>
<tr class="memdesc:a04e819b6cda76373498762317895b4b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Macro specifies if server accepts HTTP authorization then the URL username and password are reused since it is unlikely a client will use both methods.  <a href="ghttp_8h.htm#a04e819b6cda76373498762317895b4b5">More...</a><br /></td></tr>
<tr class="separator:a04e819b6cda76373498762317895b4b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Embedded HTTP request/response handling framework PROJECT: GHTTP library TARGET SYSTEM: Arduino, STM32, Atmel AT91SAM, portable </p>
</div><h2 class="groupheader">Macro Definition Documentation</h2>
<a id="ace1043fdbf955ffdbe408962037309bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace1043fdbf955ffdbe408962037309bc">&#9670;&nbsp;</a></span>GHTTP_REQUEST_MAX_CONTENT_TYPE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_REQUEST_MAX_CONTENT_TYPE&#160;&#160;&#160;4</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macro to define upper limit on request content substrings. </p>
<p>During request processing content type header is broken down into smaller accessible strings. Some of these are useful to determine extra information about the request and this macro limits the number of substrings it can be broken into. Passed to constructor of your request instance</p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default. This is application specific and not used by framework directly </dd></dl>

</div>
</div>
<a id="af2821caf2ca2b2b0aebee1bdc496ffcd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2821caf2ca2b2b0aebee1bdc496ffcd">&#9670;&nbsp;</a></span>GHTTP_REQUEST_MAX_COOKIE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_REQUEST_MAX_COOKIE&#160;&#160;&#160;15</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application specific macro sets the maximum cookies decoded by request. </p>
<dl class="section note"><dt>Note</dt><dd>Doesn't do anything if GHTTP_REQUEST_PROCESS_COOKIES not 1</dd></dl>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default. This is application specific and not used by framework directly </dd></dl>

</div>
</div>
<a id="a8ad44e79b057326c71b4dfefe773c9a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ad44e79b057326c71b4dfefe773c9a1">&#9670;&nbsp;</a></span>GHTTP_REQUEST_MAX_HEADERS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_REQUEST_MAX_HEADERS&#160;&#160;&#160;25</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application specific macro to define upper limit on request header strings. </p>
<p>Passed to constructor of your request instance</p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default. This is application specific and not used by framework directly </dd></dl>

</div>
</div>
<a id="a2720d295556b96d0cfa46864141a00a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2720d295556b96d0cfa46864141a00a7">&#9670;&nbsp;</a></span>GHTTP_REQUEST_MAX_POST_FILE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_REQUEST_MAX_POST_FILE&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application specific macro to define upper limit on request post files variables. </p>
<p>Most applications won't require file uploads</p>
<dl class="section note"><dt>Note</dt><dd>Doesn't do anything if GHTTP_REQUEST_PROCESS_POST_FILE_VARS not 1</dd></dl>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default. This is application specific and not used by framework directly </dd></dl>

</div>
</div>
<a id="a71cb1a9de26649981433aa532d612cc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a71cb1a9de26649981433aa532d612cc1">&#9670;&nbsp;</a></span>GHTTP_REQUEST_MAX_VARS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_REQUEST_MAX_VARS&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macro to define upper limit on request query and post strings (GET/POST variables). </p>
<p>Passed to constructor of your request instance</p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default. This is application specific and not used by framework directly </dd></dl>

</div>
</div>
<a id="a3639f334469ac9b3053cff45e26de565"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3639f334469ac9b3053cff45e26de565">&#9670;&nbsp;</a></span>GHTTP_SERVER_ACCEPT_AUTHORIZATION</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SERVER_ACCEPT_AUTHORIZATION&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macro specifies if server accepts HTTP authorization (type basic parsed by request). </p>
<p>If employed then your route(s) should include something like the following header as part of a redirect when invalid username and/or password are given:</p>
<p>s.response.Header(T("WWW-Authenticate: Basic realm='You must authenticate with server', charset='iso-8859-3'"));</p>
<dl class="section attention"><dt>Attention</dt><dd>Define as 1 if you do want HTTP authorization (default 0) </dd></dl>

</div>
</div>
<a id="a04e819b6cda76373498762317895b4b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a04e819b6cda76373498762317895b4b5">&#9670;&nbsp;</a></span>GHTTP_SERVER_AUTHORIZATION_REUSE_VARS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SERVER_AUTHORIZATION_REUSE_VARS&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macro specifies if server accepts HTTP authorization then the URL username and password are reused since it is unlikely a client will use both methods. </p>
<p>Enabling this macro will overwrite request.username and request.password with HTTP authorization detail in an effort to reduce memory footprint</p>
<p>When not enabled (default) then request.authorization_username and request.authorization_password are setup otherwise request.username and request.password are.</p>
<dl class="section attention"><dt>Attention</dt><dd>Define as 1 if you do want HTTP authorization to overwrite URL request.username and request.password (default 0) </dd></dl>

</div>
</div>
<a id="a15ebc4a4b1455507fb07a13bc53a4c8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15ebc4a4b1455507fb07a13bc53a4c8d">&#9670;&nbsp;</a></span>GHTTP_SERVER_MAX_ROUTES</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SERVER_MAX_ROUTES&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application specific macro sets the maximum routes handled by route manager (the HTTP server) </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default. This is application specific and not used by framework directly </dd></dl>

</div>
</div>
<a id="a86554cab77ea271f91ca2bd131aaf0cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86554cab77ea271f91ca2bd131aaf0cf">&#9670;&nbsp;</a></span>GHTTP_SESSION_EXPIRE_TIME</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SESSION_EXPIRE_TIME&#160;&#160;&#160;(60*30)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application specific macro defines a session instance timeout in Seconds. </p>
<dl class="section note"><dt>Note</dt><dd>This is per active session and relates to <a class="el" href="classghttp_1_1_session.htm#af0118a73e69ec18880b1adf616d6718e" title="Get elapsed time between now and session last use.">ghttp::Session::GetLastUse</a> </dd></dl>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default value. You don't need to use this macro since it is a template parameter to <a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">ghttp::Session</a></dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Seconds </dd></dl>

</div>
</div>
<a id="a11edfcb42daa43c7843ae15b0f1a5b92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11edfcb42daa43c7843ae15b0f1a5b92">&#9670;&nbsp;</a></span>GHTTP_SESSIONID_LENGTH</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SESSIONID_LENGTH&#160;&#160;&#160;33</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Application specific session id string length, characters (including NULL) </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default. You don't need to use this macro since it's a template parameter to <a class="el" href="classghttp_1_1_session_id.htm" title="A class representing a session ID with helpers for comparison checking, length and session id string ...">ghttp::SessionId</a></dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Characters (including NULL) </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="ghttp_static_request_response_session_simple_8ino-example.htm#a8">ghttp_static_request_response_session_simple.ino</a>.</dd>
</dl>

</div>
</div>
<a id="ab0cca86144fb42f31e6393771ea1ab12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0cca86144fb42f31e6393771ea1ab12">&#9670;&nbsp;</a></span>GHTTP_SESSIONMGR_MAX_SESSIONS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SESSIONMGR_MAX_SESSIONS&#160;&#160;&#160;10</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macro to include MAC address in Session management otherwise simplify to use IP. </p>
<p>If security an issue define as 1</p>
<p>Sessions are related to clients to link them session variables via network addresses, commonly this is simply IP or IP:port but here we can include MAC. It is harder to spoof a MAC on the same LAN where a node exists already with the same MAC controlling your device</p>
<dl class="section attention"><dt>Attention</dt><dd>Define as 1 to include client MAC address in session management Application specific macro sets the maximum unique sessions handled by session manager (the HTTP server)</dd>
<dd>
Define your own or use this default. This is application specific and not used by framework directly </dd></dl>

</div>
</div>
<a id="a368631586d10c1e522e66f134c133331"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a368631586d10c1e522e66f134c133331">&#9670;&nbsp;</a></span>GHTTP_SESSIONRND_ENTROPHY_SRC1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SESSIONRND_ENTROPHY_SRC1&#160;&#160;&#160;millis()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Random session entrophy source 1. </p>
<p>Under Arduino uses millis(), replace if using bare metal environment</p>
<dl class="section attention"><dt>Attention</dt><dd>Use this macro to define your own entrophy source</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Integer </dd></dl>

</div>
</div>
<a id="aad253e7cf8ef247c14224de0d7ab2b49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad253e7cf8ef247c14224de0d7ab2b49">&#9670;&nbsp;</a></span>GHTTP_SESSIONRND_ENTROPHY_SRC2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SESSIONRND_ENTROPHY_SRC2&#160;&#160;&#160;analogRead(A7)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Random session entrophy source 2. </p>
<p>Under Arduino for Mega/Due uses analogue read of input (adc7), replace if using bare metal environment or with another floating input</p>
<dl class="section attention"><dt>Attention</dt><dd>Use this macro to define your own entrophy source</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Integer </dd></dl>

</div>
</div>
<a id="a5a928c2294d364adcd227ec40b1a6021"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a928c2294d364adcd227ec40b1a6021">&#9670;&nbsp;</a></span>GHTTP_SESSIONRND_GENERATE</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_SESSIONRND_GENERATE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">n</td><td>)</td>
          <td>&#160;&#160;&#160;SessionRnd&lt;n&gt;::Generate()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Random session ID generation, string length. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own session generation macro if you want to replace default operation/class used</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">n</td><td>Length in characters (including NULL) of generated session ID </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String pointer </dd></dl>

</div>
</div>
<a id="adb0af5cd857ba281813259c0ad82d694"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb0af5cd857ba281813259c0ad82d694">&#9670;&nbsp;</a></span>GHTTP_STOPWATCH_MS_TICKER_READ</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define GHTTP_STOPWATCH_MS_TICKER_READ&#160;&#160;&#160;millis()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Macro defined to give StopWatch class a system ticker source. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own or use this default with Arduino framework</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Milliseconds ticker count. This is the unit of StopWatch class </dd></dl>

</div>
</div>
<a id="a37196cf08a64597afdbddd552611e5fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37196cf08a64597afdbddd552611e5fe">&#9670;&nbsp;</a></span>PGM_CHAR</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_CHAR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;static_cast&lt;char&gt;(pgm_read_byte_near((uint16_t)x))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Read character from AVR flash memory. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own as required. If using larger AVR with multiple flash banks define with pgm_read_byte_far</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Program/flash memory address </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Character </dd></dl>

</div>
</div>
<a id="acfb632669c1b54869f00e2340220c0bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfb632669c1b54869f00e2340220c0bf">&#9670;&nbsp;</a></span>PGM_MEMCPY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_MEMCPY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">s&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;memcpy_P(x,y,s)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Memory copy from AVR flash memory string. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own as required. If using larger AVR with multiple flash banks define with memcpy_PF</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Destination pointer (SRAM based) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Source pointer (flash based) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Size, Bytes </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>x Destination pointer </dd></dl>

</div>
</div>
<a id="a4a7a5aa920ea4f3366b3f339a9bf5d37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a7a5aa920ea4f3366b3f339a9bf5d37">&#9670;&nbsp;</a></span>PGM_STRCAT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_STRCAT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;strcat_P(x,y)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>String concatenate from AVR flash memory string. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own as required. If using larger AVR with multiple flash banks define with strcat_PF</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>String pointer (SRAM based) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>String pointer (flash based) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>x String pointer </dd></dl>
<dl class="section examples"><dt>Examples</dt><dd><a class="el" href="ghttp_static_request_response_session_simple_8ino-example.htm#a9">ghttp_static_request_response_session_simple.ino</a>.</dd>
</dl>

</div>
</div>
<a id="a7b3d4acc5125bbdaf040747f42f05b91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b3d4acc5125bbdaf040747f42f05b91">&#9670;&nbsp;</a></span>PGM_STRCPY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_STRCPY</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">y, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">s&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;strcpy_P(x,y,s)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>String copy from AVR flash memory string. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own as required. If using larger AVR with multiple flash banks define with strcpy_PF</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Destination pointer (SRAM based) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">y</td><td>Source pointer (flash based) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Size, Bytes </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>x Destination pointer </dd></dl>

</div>
</div>
<a id="ae6b66a4eea341e5050580e68bfbc3745"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae6b66a4eea341e5050580e68bfbc3745">&#9670;&nbsp;</a></span>PGM_STRLEN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_STRLEN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;strlen_P(x)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get string length from AVR flash memory string. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own as required. If using larger AVR with multiple flash banks define with strlen_PF</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>String pointer (flash based) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>N Character count (excluding NULL) </dd></dl>

</div>
</div>
<a id="ae98d5cd4c4cd330228bc55de5640aaf5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae98d5cd4c4cd330228bc55de5640aaf5">&#9670;&nbsp;</a></span>PGM_STRNLEN</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define PGM_STRNLEN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">s&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;strnlen_P(x,s)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get string length from AVR flash memory string with maximum length. </p>
<dl class="section attention"><dt>Attention</dt><dd>Define your own as required. If using larger AVR with multiple flash banks define with strlen_PF</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>String pointer (flash based) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">s</td><td>Size, Characters </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>N Character count (excluding NULL) </dd></dl>

</div>
</div>
<a id="a16a0f7e7053a679c9bf4289b441a2be7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16a0f7e7053a679c9bf4289b441a2be7">&#9670;&nbsp;</a></span>T</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define T</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;(static_cast&lt;PGM_VOID_P&gt;(PSTR(x)))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Text marco. </p>
<p>For AVR places given string in flash memory via PROGMEM attribute in order to reduce SRAM use</p>
<dl class="section note"><dt>Note</dt><dd>For parameters, use type PGM_VOID_P </dd>
<dd>
Not all framework functions take flash memory pointers, check before use </dd></dl>
<dl class="section attention"><dt>Attention</dt><dd>Define your own if you want some other functionality</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">x</td><td>Character string </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>String pointer </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="ghttp_8h.htm">ghttp.h</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 16:37:30 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
