<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: ghttp::SessionManager&lt; S_MAX, ST, SWT &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-b53ec0f(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classghttp_1_1_session_manager.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classghttp_1_1_session_manager-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ghttp::SessionManager&lt; S_MAX, ST, SWT &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> manager class, containing multiple <a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> instances.  
 <a href="classghttp_1_1_session_manager.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="ghttp__sessionmgr_8h_source.htm">ghttp_sessionmgr.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad36c2bb65c535672f2954badf508803a"><td class="memItemLeft" align="right" valign="top"><a id="ad36c2bb65c535672f2954badf508803a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#ad36c2bb65c535672f2954badf508803a">SessionManager</a> ()</td></tr>
<tr class="memdesc:ad36c2bb65c535672f2954badf508803a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor, make stable instance. <br /></td></tr>
<tr class="separator:ad36c2bb65c535672f2954badf508803a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ef3683b7b44e633dc4dadbf3f9117fa"><td class="memItemLeft" align="right" valign="top">ST &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a1ef3683b7b44e633dc4dadbf3f9117fa">StartSession</a> (const <a class="el" href="structghttp_1_1_i_p4__t.htm">IP4_t</a> &amp;ip4, const char *existing_session_id=NULL, uint8_t *index=NULL)</td></tr>
<tr class="memdesc:a1ef3683b7b44e633dc4dadbf3f9117fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start session (excludes MAC).  <a href="classghttp_1_1_session_manager.htm#a1ef3683b7b44e633dc4dadbf3f9117fa">More...</a><br /></td></tr>
<tr class="separator:a1ef3683b7b44e633dc4dadbf3f9117fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22940ba6b5d62e3f8c786611b1c8f912"><td class="memItemLeft" align="right" valign="top">ST &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a22940ba6b5d62e3f8c786611b1c8f912">GetSession</a> (const uint8_t index)</td></tr>
<tr class="memdesc:a22940ba6b5d62e3f8c786611b1c8f912"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get session by index.  <a href="classghttp_1_1_session_manager.htm#a22940ba6b5d62e3f8c786611b1c8f912">More...</a><br /></td></tr>
<tr class="separator:a22940ba6b5d62e3f8c786611b1c8f912"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48407ad7864d26854eb3ae6f97e9b79b"><td class="memItemLeft" align="right" valign="top"><a id="a48407ad7864d26854eb3ae6f97e9b79b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a48407ad7864d26854eb3ae6f97e9b79b">DestroyAll</a> ()</td></tr>
<tr class="memdesc:a48407ad7864d26854eb3ae6f97e9b79b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destory all sessions. <br /></td></tr>
<tr class="separator:a48407ad7864d26854eb3ae6f97e9b79b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fefb2f867acef91953fb08d367424ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a4fefb2f867acef91953fb08d367424ea">Destroy</a> (const uint8_t index)</td></tr>
<tr class="memdesc:a4fefb2f867acef91953fb08d367424ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destory session by index.  <a href="classghttp_1_1_session_manager.htm#a4fefb2f867acef91953fb08d367424ea">More...</a><br /></td></tr>
<tr class="separator:a4fefb2f867acef91953fb08d367424ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7d4e2f9c55440f259a0233efe98cc3d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#af7d4e2f9c55440f259a0233efe98cc3d">Destroy</a> (const char *id=NULL)</td></tr>
<tr class="memdesc:af7d4e2f9c55440f259a0233efe98cc3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destory session by session id.  <a href="classghttp_1_1_session_manager.htm#af7d4e2f9c55440f259a0233efe98cc3d">More...</a><br /></td></tr>
<tr class="separator:af7d4e2f9c55440f259a0233efe98cc3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0c770df85116a1d9d9b09d4d33768f4"><td class="memItemLeft" align="right" valign="top">ST *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#af0c770df85116a1d9d9b09d4d33768f4">FindBySessionId</a> (const char *session_id, uint8_t *session_idx=NULL)</td></tr>
<tr class="memdesc:af0c770df85116a1d9d9b09d4d33768f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Match existing session with given session id.  <a href="classghttp_1_1_session_manager.htm#af0c770df85116a1d9d9b09d4d33768f4">More...</a><br /></td></tr>
<tr class="separator:af0c770df85116a1d9d9b09d4d33768f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2797ad26cb5dda3c72b206f70db556a7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a2797ad26cb5dda3c72b206f70db556a7">Service</a> ()</td></tr>
<tr class="memdesc:a2797ad26cb5dda3c72b206f70db556a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Service sessions.  <a href="classghttp_1_1_session_manager.htm#a2797ad26cb5dda3c72b206f70db556a7">More...</a><br /></td></tr>
<tr class="separator:a2797ad26cb5dda3c72b206f70db556a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aa5239a3a37976c327708bfaa5028d58c"><td class="memItemLeft" align="right" valign="top">ST &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#aa5239a3a37976c327708bfaa5028d58c">Next</a> (uint8_t *session_idx=NULL)</td></tr>
<tr class="memdesc:aa5239a3a37976c327708bfaa5028d58c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get next free session or existing session by index.  <a href="classghttp_1_1_session_manager.htm#aa5239a3a37976c327708bfaa5028d58c">More...</a><br /></td></tr>
<tr class="separator:aa5239a3a37976c327708bfaa5028d58c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79a392884e3b458c8a1965e1d7a3b9c3"><td class="memItemLeft" align="right" valign="top">ST *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a79a392884e3b458c8a1965e1d7a3b9c3">FindBySessionIdWithExclude</a> (const char *session_id, ST *exclude=NULL, uint8_t *session_idx=NULL)</td></tr>
<tr class="memdesc:a79a392884e3b458c8a1965e1d7a3b9c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Match existing session with given session id.  <a href="classghttp_1_1_session_manager.htm#a79a392884e3b458c8a1965e1d7a3b9c3">More...</a><br /></td></tr>
<tr class="separator:a79a392884e3b458c8a1965e1d7a3b9c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a5d93c1681d7efc1e68e7fe271c85cc28"><td class="memItemLeft" align="right" valign="top"><a id="a5d93c1681d7efc1e68e7fe271c85cc28"></a>
<a class="el" href="classghttp_1_1_stop_watch.htm">StopWatch</a>&lt; SWT &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a5d93c1681d7efc1e68e7fe271c85cc28">service_timeout_</a></td></tr>
<tr class="memdesc:a5d93c1681d7efc1e68e7fe271c85cc28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stopwatch service timeout. <br /></td></tr>
<tr class="separator:a5d93c1681d7efc1e68e7fe271c85cc28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2909acb16b3c324a38346455e18ddc3c"><td class="memItemLeft" align="right" valign="top"><a id="a2909acb16b3c324a38346455e18ddc3c"></a>
ST&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classghttp_1_1_session_manager.htm#a2909acb16b3c324a38346455e18ddc3c">session_</a> [S_MAX]</td></tr>
<tr class="memdesc:a2909acb16b3c324a38346455e18ddc3c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> object array. <br /></td></tr>
<tr class="separator:a2909acb16b3c324a38346455e18ddc3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;uint8_t S_MAX, class ST, typename SWT&gt;<br />
class ghttp::SessionManager&lt; S_MAX, ST, SWT &gt;</h3>

<p><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> manager class, containing multiple <a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> instances. </p>
<p>Includes helpers to search and control sessions</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000012">Todo:</a></b></dt><dd>Add task for age</dd></dl>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">S_MAX</td><td>Maximum sessions handled </td></tr>
    <tr><td class="paramname">ST</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> class </td></tr>
    <tr><td class="paramname">SWT</td><td><a class="el" href="classghttp_1_1_stop_watch.htm" title="Stopwatch class used for asynchronous timeout management.">StopWatch</a> class primitive (POD) type. If in dout use uint32_t as the type has to be able to hold session timeout period </td></tr>
  </table>
  </dd>
</dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af7d4e2f9c55440f259a0233efe98cc3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7d4e2f9c55440f259a0233efe98cc3d">&#9670;&nbsp;</a></span>Destroy() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::Destroy </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>id</em> = <code>NULL</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destory session by session id. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">id</td><td>Pointer to session id string </td></tr>
  </table>
  </dd>
</dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>Success </td></tr>
    <tr><td class="paramname">false</td><td>Failed to find session by given id string </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a4fefb2f867acef91953fb08d367424ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fefb2f867acef91953fb08d367424ea">&#9670;&nbsp;</a></span>Destroy() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::Destroy </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destory session by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> 0&gt;= index &lt;S_MAX </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="af0c770df85116a1d9d9b09d4d33768f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0c770df85116a1d9d9b09d4d33768f4">&#9670;&nbsp;</a></span>FindBySessionId()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ST* <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::FindBySessionId </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>session_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>session_idx</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Match existing session with given session id. </p>
<p>Rather than store say a CRC of session information I decided the best approach was to actually check by character string because of the nature of CRC probability</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">session_id</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> id string pointer (NULL terminated) </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">session_idx</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> 0&gt;= index &lt;S_MAX or NULL (default) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> reference </dd></dl>

</div>
</div>
<a id="a79a392884e3b458c8a1965e1d7a3b9c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79a392884e3b458c8a1965e1d7a3b9c3">&#9670;&nbsp;</a></span>FindBySessionIdWithExclude()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ST* <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::FindBySessionIdWithExclude </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>session_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ST *&#160;</td>
          <td class="paramname"><em>exclude</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>session_idx</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Match existing session with given session id. </p>
<p>Rather than store say a CRC of session information I decided the best approach was to actually check by character string because of the nature of CRC probability. Search can exclude a specific session</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">session_id</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> id string pointer (NULL terminated) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">exclude</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> object pointer or NULL (default, no session excluded) </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">session_idx</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> 0&gt;= index &lt;S_MAX or NULL (default, next free) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> reference </dd></dl>

</div>
</div>
<a id="a22940ba6b5d62e3f8c786611b1c8f912"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22940ba6b5d62e3f8c786611b1c8f912">&#9670;&nbsp;</a></span>GetSession()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ST&amp; <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::GetSession </td>
          <td>(</td>
          <td class="paramtype">const uint8_t&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get session by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">index</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> 0&gt;= index &lt;S_MAX </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> reference </dd></dl>

</div>
</div>
<a id="aa5239a3a37976c327708bfaa5028d58c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5239a3a37976c327708bfaa5028d58c">&#9670;&nbsp;</a></span>Next()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ST&amp; <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::Next </td>
          <td>(</td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>session_idx</em> = <code>NULL</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get next free session or existing session by index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">session_idx</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> 0&gt;= index &lt;S_MAX or NULL (default) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> reference </dd></dl>

</div>
</div>
<a id="a2797ad26cb5dda3c72b206f70db556a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2797ad26cb5dda3c72b206f70db556a7">&#9670;&nbsp;</a></span>Service()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::Service </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Service sessions. </p>
<p>Invoke at minimum once per Second - updates session last used timers and destory expired sessions (session garbarge collection)</p>
<dl class="section return"><dt>Returns</dt><dd>Serviced state </dd></dl>
<dl class="retval"><dt>Return values</dt><dd>
  <table class="retval">
    <tr><td class="paramname">true</td><td>Sessions serviced </td></tr>
    <tr><td class="paramname">false</td><td>Timer not finished, no session service yet </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1ef3683b7b44e633dc4dadbf3f9117fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ef3683b7b44e633dc4dadbf3f9117fa">&#9670;&nbsp;</a></span>StartSession()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;uint8_t S_MAX, class ST , typename SWT &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ST&amp; <a class="el" href="classghttp_1_1_session_manager.htm">ghttp::SessionManager</a>&lt; S_MAX, ST, SWT &gt;::StartSession </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structghttp_1_1_i_p4__t.htm">IP4_t</a> &amp;&#160;</td>
          <td class="paramname"><em>ip4</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>existing_session_id</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint8_t *&#160;</td>
          <td class="paramname"><em>index</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start session (excludes MAC). </p>
<p>Will look up session by passed session id or assign new session if none exists. Validates any found session against the network address detail given to ensure correct session</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">ip4</td><td>Client/session owner IP address reference </td></tr>
    <tr><td class="paramdir">[in]</td><td class="paramname">existing_session_id</td><td><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> ID string pointer (NULL terminated). Default NULL. Source HTTP request session cookie </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">index</td><td>Optional pointer to integer for session index from <a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> Manager (default NULL). This index can be used with <a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> Manager api </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classghttp_1_1_session.htm" title="A container class for a session object wrapping user supplied ADT accessible during session use and a...">Session</a> reference </dd></dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>ghttp</b></li><li class="navelem"><a class="el" href="classghttp_1_1_session_manager.htm">SessionManager</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 14:59:57 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
