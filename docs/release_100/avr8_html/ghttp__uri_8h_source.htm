<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: support/ghttp_uri.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-e1d212a(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('ghttp__uri_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ghttp_uri.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ghttp__uri_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * \file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Embedded HTTP request/response handling framework - URI</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * PROJECT: HTTP library</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * TARGET SYSTEM: Arduino, STM32, Atmel AT91SAM, portable</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef GHTTP_URI_H</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define GHTTP_URI_H</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span>ghttp {</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * A class representing URI encode/decode implementation loosely covering RFC 3986</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="classghttp_1_1_u_r_i.htm">   16</a></span>&#160;<span class="keyword">class </span><a class="code" href="classghttp_1_1_u_r_i.htm">URI</a> {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">     * Decode URI string.  Decoding may make a string smaller but not larger</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">     * \param[in,out] str Encoded ASCII string pointer (NULL terminated)</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">     * \param[in] l String str length in characters (not including NULL).  Default 0 =&gt; strlen(str)</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">     * \param[in] include_plus_space Flag indicating ASCII plus &#39;+&#39; translates to &#39; &#39; (soft space) when true (default)</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">     * \return String pointer of str</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classghttp_1_1_u_r_i.htm#a1415492151e4d133b36535a1384c9ea7">   26</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">char</span>* <a class="code" href="classghttp_1_1_u_r_i.htm#a1415492151e4d133b36535a1384c9ea7">Decode</a>(<span class="keywordtype">char</span>* str, uint16_t l=0, <span class="keyword">const</span> <span class="keywordtype">bool</span> include_plus_space=<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        uint8_t h;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        uint16_t i = 0;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordtype">char</span>* o_str = str;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordtype">char</span>* w_str = str;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">if</span> (0 == l) {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            l = strlen(str);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">if</span> (0 == l) {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">return</span> str;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">while</span>(1) {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">if</span> (!*str) {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">if</span> (include_plus_space &amp;&amp; <span class="charliteral">&#39;+&#39;</span>==*str) {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                *w_str = <span class="charliteral">&#39; &#39;</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <span class="keywordflow">if</span> (<span class="charliteral">&#39;%&#39;</span> == str[0] &amp;&amp; str[1]&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; ((str[1] &amp; 0x223)&lt;=<span class="charliteral">&#39;F&#39;</span>) &amp;&amp; str[2]&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; ((str[2] &amp; 0x223)&lt;=<span class="charliteral">&#39;F&#39;</span>)) {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                    <span class="comment">// Upper nibble 0-9 or a-f</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                    <span class="keywordflow">if</span> (str[1]&lt;=<span class="charliteral">&#39;9&#39;</span>) {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                        h = (str[1] - <span class="charliteral">&#39;0&#39;</span>)&lt;&lt;4;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                    }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                        h = (((str[1] &amp; 223) - <span class="charliteral">&#39;A&#39;</span>) + 10) &lt;&lt;4;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    <span class="comment">// Lower nibble 0-9 or a-f</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                    <span class="keywordflow">if</span> (str[2]&lt;=<span class="charliteral">&#39;9&#39;</span>) {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                        h |= str[2] - <span class="charliteral">&#39;0&#39;</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                        h |= ((str[2] &amp; 223) - <span class="charliteral">&#39;A&#39;</span>) + 10;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                    }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                    *w_str = (char)h;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                    str+=2;    <span class="comment">// 2+1=3 =&gt; %xx=3</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                    <span class="keywordflow">if</span> (w_str != str) {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                        *w_str = *str;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            str++;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            w_str++;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment">// Altered?  install null</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">if</span> (w_str != str) {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            *w_str = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> o_str;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    } <span class="comment">// Decode(...)</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * Get decode URI string length (characters) includes NULL</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     * </span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     * \param[in] str Encoded ASCII string pointer (NULL terminated)</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     * \param[in] l String str length in characters (not including NULL).  Default 0 =&gt; strlen(str)</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * \return Length in Bytes/ASCII characters</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classghttp_1_1_u_r_i.htm#a0d2e11ed073795f6af3ca95605cf690b">   88</a></span>&#160;    <span class="keyword">static</span> uint16_t <a class="code" href="classghttp_1_1_u_r_i.htm#a0d2e11ed073795f6af3ca95605cf690b">GetDecodeLength</a>(<span class="keywordtype">char</span>* str, uint16_t l=0) {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        uint16_t dl = 1;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">if</span> (0 == l) {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            l = strlen(str);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">if</span> (0 &lt; l) {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">while</span>(1) {</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">if</span> (!*str) {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="keywordflow">if</span> (<span class="charliteral">&#39;%&#39;</span> == str[0] &amp;&amp; str[1]&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; ((str[1] &amp; 0x223)&lt;=<span class="charliteral">&#39;F&#39;</span>) &amp;&amp; str[2]&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; ((str[2] &amp; 0x223)&lt;=<span class="charliteral">&#39;F&#39;</span>)) {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                    str+=2;    <span class="comment">// 2+1=3 =&gt; %xx=3</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                dl++;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                str++;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">return</span> dl;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    } <span class="comment">// GetDecodeLength(...)</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="comment">     * Encode URI string.  Encoding may make a string larger</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">     * \param[out] dst ASCII string pointer</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment">     * \param[in] dst_l Destination string buffer length (characters)</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">     * \param[in] src Encoded string pointer (NULL terminated)</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">     * \param[in] src_l Encoded string length in Bytes (not including NULL).  Default 0 =&gt; strlen(src)</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">     * \param[in] plus_space_no_twiddle Flag indicating &#39;+&#39; =&gt; &#39; &#39; and no &#39;~&#39; accepted (default true)</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">     * \return String pointer dst</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classghttp_1_1_u_r_i.htm#a71e52dbd9488ac4426d2a84c0678c70d">  121</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">char</span>* <a class="code" href="classghttp_1_1_u_r_i.htm#a71e52dbd9488ac4426d2a84c0678c70d">Encode</a>(<span class="keywordtype">char</span>* dst, uint16_t dst_l, <span class="keyword">const</span> <span class="keywordtype">char</span>* src, uint16_t src_l=0, <span class="keyword">const</span> <span class="keywordtype">bool</span> plus_space_no_twiddle=<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordtype">char</span> a = <span class="charliteral">&#39;\0&#39;</span>,b = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordtype">char</span>* dst_end_ptr = &amp;dst[dst_l];</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordtype">char</span>* dst_o = dst;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">if</span> (!src_l) {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            src_l = strlen(src);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">for</span>(uint16_t i=0; i&lt;src_l; i++) {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="comment">// Single characters?</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">if</span> (plus_space_no_twiddle &amp;&amp; src[i]==<span class="charliteral">&#39; &#39;</span>) {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="comment">// +</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> (!plus_space_no_twiddle &amp;&amp; src[i]==<span class="charliteral">&#39;~&#39;</span>) {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="comment">// ~</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> (src[i]==<span class="charliteral">&#39;-&#39;</span> || src[i]==<span class="charliteral">&#39;.&#39;</span> || src[i]==<span class="charliteral">&#39;_&#39;</span>) {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="comment">// &#39;-&#39;, &#39;.&#39;, &#39;_&#39;</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> (src[i]&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; src[i]&lt;=<span class="charliteral">&#39;9&#39;</span>) {</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="comment">// &#39;0&#39; ... &#39;9&#39;</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> ((src[i] &amp; 223)&gt;=<span class="charliteral">&#39;A&#39;</span> &amp;&amp; (src[i] &amp; 223)&lt;=<span class="charliteral">&#39;Z&#39;</span>) {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                <span class="comment">// &#39;A&#39; ... &#39;Z&#39;, &#39;a&#39; ... &#39;z&#39;</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="comment">// Anything else is %xx encode</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                a = (src[i]&gt;&gt;4);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                a+=(a&gt;=10)?<span class="charliteral">&#39;A&#39;</span>-10:<span class="charliteral">&#39;0&#39;</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                b = src[i] &amp; 0xf;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                b+=(b&gt;=10)?<span class="charliteral">&#39;A&#39;</span>-10:<span class="charliteral">&#39;0&#39;</span>;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="keywordflow">if</span> (a | b) {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                <span class="keywordflow">if</span> ((dst+3)&gt;=dst_end_ptr) {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                dst[0] = <span class="charliteral">&#39;%&#39;</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                dst[1] = a;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                dst[2] = b;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                dst+=3;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                a = b = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">if</span> ((dst+1)&gt;=dst_end_ptr) {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                dst[0] = src[i];</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                dst++;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        } <span class="comment">// switch(src[i])</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">if</span> ((dst+1)&gt;=dst_end_ptr) {</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            *(dst_end_ptr-1) = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            dst[0]=<span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">return</span> dst_o;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    } <span class="comment">// Encode(...)</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="comment">     * Get encode URI string length (Bytes/characters) includes NULL</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="comment">     * </span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="comment">     * \param[in] src ASCII string pointer (NULL terminated)</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="comment">     * \param[in] src_l String src length (not including NULL).  Default 0 =&gt; strlen(src)</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="comment">     * \param[in] plus_space_no_twiddle Flag indicating &#39;+&#39; =&gt; &#39; &#39; and no &#39;~&#39; accepted (default true)</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="comment">     * \return Length in Bytes/characters</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="classghttp_1_1_u_r_i.htm#ad0bb8bb03e26b08d92375e7fffac6ebb">  182</a></span>&#160;    <span class="keyword">static</span> uint16_t <a class="code" href="classghttp_1_1_u_r_i.htm#ad0bb8bb03e26b08d92375e7fffac6ebb">GetEncodeLength</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* src, uint16_t src_l=0, <span class="keyword">const</span> <span class="keywordtype">bool</span> plus_space_no_twiddle=<span class="keyword">true</span>) {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        uint16_t d_len = 0;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keywordflow">if</span> (!src_l) {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            src_l = strlen(src);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">for</span>(uint16_t i=0; i&lt;src_l; i++) {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="comment">// Single characters?</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="keywordflow">if</span> (plus_space_no_twiddle &amp;&amp; src[i]==<span class="charliteral">&#39; &#39;</span>) {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                <span class="comment">// +</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> (!plus_space_no_twiddle &amp;&amp; src[i]==<span class="charliteral">&#39;~&#39;</span>) {</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                <span class="comment">// ~</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> (src[i]==<span class="charliteral">&#39;-&#39;</span> || src[i]==<span class="charliteral">&#39;.&#39;</span> || src[i]==<span class="charliteral">&#39;_&#39;</span>) {</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="comment">// &#39;-&#39;, &#39;.&#39;, &#39;_&#39;</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> (src[i]&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; src[i]&lt;=<span class="charliteral">&#39;9&#39;</span>) {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                <span class="comment">// &#39;0&#39; ... &#39;9&#39;</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            }<span class="keywordflow">else</span> <span class="keywordflow">if</span> ((src[i] &amp; 223)&gt;=<span class="charliteral">&#39;A&#39;</span> &amp;&amp; (src[i] &amp; 223)&lt;=<span class="charliteral">&#39;Z&#39;</span>) {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                <span class="comment">// &#39;A&#39; ... &#39;Z&#39;, &#39;a&#39; ... &#39;z&#39;</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                <span class="comment">// Anything else is %xx encode</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                d_len+=2;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;            d_len++;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        } <span class="comment">// switch(src[i])</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">return</span> d_len+1;    <span class="comment">// Include NULL</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    } <span class="comment">// GetEncodeLength(...)</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}; <span class="comment">// class URI</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}; <span class="comment">// namespace ghttp</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">#endif // GHTTP_URI_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassghttp_1_1_u_r_i_htm_a0d2e11ed073795f6af3ca95605cf690b"><div class="ttname"><a href="classghttp_1_1_u_r_i.htm#a0d2e11ed073795f6af3ca95605cf690b">ghttp::URI::GetDecodeLength</a></div><div class="ttdeci">static uint16_t GetDecodeLength(char *str, uint16_t l=0)</div><div class="ttdoc">Get decode URI string length (characters) includes NULL.</div><div class="ttdef"><b>Definition:</b> ghttp_uri.h:88</div></div>
<div class="ttc" id="aclassghttp_1_1_u_r_i_htm"><div class="ttname"><a href="classghttp_1_1_u_r_i.htm">ghttp::URI</a></div><div class="ttdoc">A class representing URI encode/decode implementation loosely covering RFC 3986.</div><div class="ttdef"><b>Definition:</b> ghttp_uri.h:16</div></div>
<div class="ttc" id="aclassghttp_1_1_u_r_i_htm_a71e52dbd9488ac4426d2a84c0678c70d"><div class="ttname"><a href="classghttp_1_1_u_r_i.htm#a71e52dbd9488ac4426d2a84c0678c70d">ghttp::URI::Encode</a></div><div class="ttdeci">static char * Encode(char *dst, uint16_t dst_l, const char *src, uint16_t src_l=0, const bool plus_space_no_twiddle=true)</div><div class="ttdoc">Encode URI string.</div><div class="ttdef"><b>Definition:</b> ghttp_uri.h:121</div></div>
<div class="ttc" id="aclassghttp_1_1_u_r_i_htm_a1415492151e4d133b36535a1384c9ea7"><div class="ttname"><a href="classghttp_1_1_u_r_i.htm#a1415492151e4d133b36535a1384c9ea7">ghttp::URI::Decode</a></div><div class="ttdeci">static char * Decode(char *str, uint16_t l=0, const bool include_plus_space=true)</div><div class="ttdoc">Decode URI string.</div><div class="ttdef"><b>Definition:</b> ghttp_uri.h:26</div></div>
<div class="ttc" id="aclassghttp_1_1_u_r_i_htm_ad0bb8bb03e26b08d92375e7fffac6ebb"><div class="ttname"><a href="classghttp_1_1_u_r_i.htm#ad0bb8bb03e26b08d92375e7fffac6ebb">ghttp::URI::GetEncodeLength</a></div><div class="ttdeci">static uint16_t GetEncodeLength(const char *src, uint16_t src_l=0, const bool plus_space_no_twiddle=true)</div><div class="ttdoc">Get encode URI string length (Bytes/characters) includes NULL.</div><div class="ttdef"><b>Definition:</b> ghttp_uri.h:182</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5815af820a9cc9481f1d0990a0d60286.htm">support</a></li><li class="navelem"><a class="el" href="ghttp__uri_8h.htm">ghttp_uri.h</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 16:37:29 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
