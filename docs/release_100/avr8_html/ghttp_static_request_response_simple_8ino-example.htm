<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: ghttp_static_request_response_simple.ino</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-b53ec0f(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('ghttp_static_request_response_simple_8ino-example.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ghttp_static_request_response_simple.ino</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="comment">/**</span></div>
<div class="line"><span class="comment"> * \file</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * Example use of GHTTP (Embedded library for parsing HTTP requests and creating responses) - Example of complete request and response using static </span></div>
<div class="line"><span class="comment"> * request data which could have come from any hardware.  To keep it simple there are no cookies or session and the request is urlencoded</span></div>
<div class="line"><span class="comment"> *</span></div>
<div class="line"><span class="comment"> * \cond PRIVATE</span></div>
<div class="line"><span class="comment"> * Expected serial output (Arduino/Genuino Uno/Mega2560):</span></div>
<div class="line"><span class="comment"> * setup()</span></div>
<div class="line"><span class="comment"> * POST /something?page=123 HTTP/1.1</span></div>
<div class="line"><span class="comment"> * Content-Length: 28</span></div>
<div class="line"><span class="comment"> * Accept: application/json, text/javascript, *-*; q=0.01</span></div>
<div class="line"><span class="comment"> * Origin: null</span></div>
<div class="line"><span class="comment"> * Cookie: name=value; SESSION=1KcJwq20VwFkmtUStgYw9-GerXwi-cLAk</span></div>
<div class="line"><span class="comment"> * Content-Type: application/x-www-form-urlencoded; charset=iso-8859-1</span></div>
<div class="line"><span class="comment"> * Accept-Encoding: gzip, deflate</span></div>
<div class="line"><span class="comment"> * Accept-Language: en-GB,en-US;q=0.9,en;q=0.8</span></div>
<div class="line"><span class="comment"> * </span></div>
<div class="line"><span class="comment"> * text=Dave%20waz%20ere%202020</span></div>
<div class="line"><span class="comment"> * Response:</span></div>
<div class="line"><span class="comment"> * HTTP/1.1 200 OK</span></div>
<div class="line"><span class="comment"> * Content-Length: 77</span></div>
<div class="line"><span class="comment"> * </span></div>
<div class="line"><span class="comment"> * &lt;html&gt;&lt;body&gt;&lt;p&gt;Anything to say? Dave waz ere 2020, page 123&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</span></div>
<div class="line"><span class="comment"> * Done</span></div>
<div class="line"><span class="comment"> * \endcond</span></div>
<div class="line"><span class="comment"> * </span></div>
<div class="line"><span class="comment"> * Dave.C, 2020</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="comment">/* Adjust some parameters to suit our application.  Actually these are overly restrictive here as they would be setup to meet the requirements of all your routes, clients and meta data */</span></div>
<div class="line"><span class="preprocessor">#define GHTTP_REQUEST_PROCESS_POST_FILE_VARS 0 // Not using for this app</span></div>
<div class="line"><span class="preprocessor">#define GHTTP_REQUEST_PROCESS_COOKIES 1</span></div>
<div class="line"><span class="preprocessor">#define GHTTP_SERVER_USE_SESSIONS 0</span></div>
<div class="line"><span class="preprocessor">#define GHTTP_REQUEST_MAX_HEADERS 10</span></div>
<div class="line"><span class="preprocessor">#define GHTTP_REQUEST_MAX_VARS 6</span></div>
<div class="line"><span class="preprocessor">#define GHTTP_REQUEST_MAX_COOKIE 4</span></div>
<div class="line"><span class="preprocessor">#define GHTTP_SERVER_MAX_ROUTES 10</span></div>
<div class="line"> </div>
<div class="line"> </div>
<div class="line"><span class="comment">// Include</span></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="ghttp_8h.htm">ghttp.h</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;global.h&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;shared.h&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;routesomething.h&quot;</span></div>
<div class="line"> </div>
<div class="line"><span class="keyword">using namespace </span>examples::ghttp_static_request_response_simple;</div>
<div class="line"> </div>
<div class="line"><span class="comment">/*</span></div>
<div class="line"><span class="comment"> * Request/response buffer.  The data would come from your chosen hardware</span></div>
<div class="line"><span class="comment"> */</span></div>
<div class="line"><span class="keywordtype">char</span> <a name="a0"></a><a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>[448];</div>
<div class="line"> </div>
<div class="line"><span class="comment">// Our application&#39;s shared data, like PHP super globals</span></div>
<div class="line"><a name="_a1"></a><a class="code" href="classexamples_1_1ghttp__static__request__response__simple_1_1_shared.htm">Shared</a> <a name="a2"></a><a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>;</div>
<div class="line"> </div>
<div class="line"><span class="comment">// Our application&#39;s route manager</span></div>
<div class="line"><a name="_a3"></a><a class="code" href="classghttp_1_1_route_manager.htm">ghttp::RouteManager&lt;GHTTP_SERVER_MAX_ROUTES, ghttp::Route&lt;Shared&gt;</a>, <a class="code" href="classexamples_1_1ghttp__static__request__response__simple_1_1_shared.htm">Shared</a>&gt;  rm(&amp;<a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>);    <span class="comment">// Maximum of 10 routes in this example</span></div>
<div class="line"> </div>
<div class="line"><span class="comment">// Create our routes handled by this application</span></div>
<div class="line"><a name="_a4"></a><a class="code" href="classexamples_1_1ghttp__static__request__response__simple_1_1_route_something.htm">RouteSomething</a> route_something;</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> setup() {</div>
<div class="line">    Serial.begin(9600);</div>
<div class="line">    <span class="keywordflow">while</span>(!Serial) { }</div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;setup()&quot;</span>);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// This would generally be setup once at POR</span></div>
<div class="line">    <a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.<a name="a5"></a>server.<a name="a6"></a>ip4 = <span class="stringliteral">&quot;10.0.0.2&quot;</span>;</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// This would have been setup before request processing using information from your chosen hardware i/f</span></div>
<div class="line">    <a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.<a name="a7"></a>client.ip4 = <span class="stringliteral">&quot;10.0.0.10&quot;</span>;</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Register routes.  This should be done once at POR, one invoke for each application route</span></div>
<div class="line">    <span class="keywordflow">if</span> (-1 == rm.Register(&amp;route_something)) {</div>
<div class="line">        printf(<span class="stringliteral">&quot;ERROR: Route manager register of something failed\n&quot;</span>);</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Tell our response instance to use the same buffer as request to reduce memory footprint.  You could do this when handling the request, changing offset as required</span></div>
<div class="line">    <a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.<a name="a8"></a>response.<a name="a9"></a><a class="code" href="classghttp_1_1_h_t_t_p_buffer.htm#aef79015e1a8fb34dd96424849e510831">SetMaximum</a>(<span class="keyword">sizeof</span>(<a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>));</div>
<div class="line">    <a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.response.<a name="a10"></a><a class="code" href="classghttp_1_1_h_t_t_p_buffer.htm#a28df8375d6824c339014a1f192aa1742">SetBuffer</a>(<a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>, 0, 100); <span class="comment">// Offset 100characters into request allowing access to some of the request while building response</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Request, assumed received over TCP/IP by some hardware interface</span></div>
<div class="line">    strcpy_P(<a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>, PSTR(</div>
<div class="line">        <span class="stringliteral">&quot;POST /something?page=123 HTTP/1.1\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;Content-Length: 28\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;Accept: application/json, text/javascript, */*; q=0.01\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;Origin: null\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;Cookie: name=value; SESSION=1KcJwq20VwFkmtUStgYw9-GerXwi-cLAk\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;Content-Type: application/x-www-form-urlencoded; charset=iso-8859-1\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;Accept-Encoding: gzip, deflate\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;Accept-Language: en-GB,en-US;q=0.9,en;q=0.8\r\n\r\n&quot;</span> \</div>
<div class="line">        <span class="stringliteral">&quot;text=Dave%20waz%20ere%202020&quot;</span>));</div>
<div class="line">    Serial.println(<a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>);</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Parse our request...</span></div>
<div class="line">    uint16_t ci = <a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.<a name="a11"></a>request.<a name="a12"></a><a class="code" href="classghttp_1_1_h_t_t_p_request.htm#ab0a4f01bfba2cb2a460440c0001a1303">Parse</a>(<a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>, strlen(<a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>), <span class="keyword">sizeof</span>(<a class="code" href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a>), <span class="comment">/*parse_content*/</span><span class="keyword">true</span>, <span class="comment">/*segmentation*/</span><span class="keyword">false</span>);</div>
<div class="line">    <span class="keywordflow">if</span> (<a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.request.<a name="a13"></a><a class="code" href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea030eaf86bd425928d1897e1613e167b5">ERR_NONE</a> != <a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.request.<a name="a14"></a><a class="code" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a>()) {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Error: &quot;</span>);</div>
<div class="line">        Serial.println(<a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.request.<a class="code" href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">GetLastError</a>(), DEC);</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Service routes</span></div>
<div class="line">    <span class="keywordflow">if</span> (-1 == rm.Service()) {</div>
<div class="line">        Serial.print(<span class="stringliteral">&quot;Error: Our route wasnt taken&quot;</span>);</div>
<div class="line">        <span class="keywordflow">return</span>;</div>
<div class="line">    }</div>
<div class="line"> </div>
<div class="line"><span class="preprocessor">#if GHTTP_REQUEST_PROCESS_COOKIES == 1 &amp;&amp; GHTTP_SERVER_USE_SESSIONS == 1</span></div>
<div class="line">    <span class="comment">// In this example it is optional, included here because you would service session manager periodically.  Internally it will react to a 1S granularity</span></div>
<div class="line">    <a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.session_manager.Service();</div>
<div class="line"><span class="preprocessor">#endif</span></div>
<div class="line"> </div>
<div class="line">    <span class="comment">// Our response to be sent over your chosen hardware is accessible via response instance GetBuffer() and GetLength().  Here it is simply output over debug serial as a string</span></div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Response:&quot;</span>);</div>
<div class="line">    Serial.println(<a class="code" href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a>.response.<a name="a15"></a><a class="code" href="classghttp_1_1_h_t_t_p_buffer.htm#aaccfbecf78f865649933f4813c2d6a82">GetBuffer</a>());</div>
<div class="line"> </div>
<div class="line">    Serial.println(<span class="stringliteral">&quot;Done&quot;</span>);</div>
<div class="line">}</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">void</span> loop() {</div>
<div class="line">    Serial.available();</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassexamples_1_1ghttp__static__request__response__simple_1_1_shared_htm"><div class="ttname"><a href="classexamples_1_1ghttp__static__request__response__simple_1_1_shared.htm">examples::ghttp_static_request_response_simple::Shared</a></div><div class="ttdoc">Application specific class holding everything required to process request/reponses.</div><div class="ttdef"><b>Definition:</b> shared.h:19</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_buffer_htm_aaccfbecf78f865649933f4813c2d6a82"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_buffer.htm#aaccfbecf78f865649933f4813c2d6a82">ghttp::HTTPBuffer::GetBuffer</a></div><div class="ttdeci">char * GetBuffer() const</div><div class="ttdoc">Get buffer.</div><div class="ttdef"><b>Definition:</b> ghttp_httpbuffer.h:172</div></div>
<div class="ttc" id="aclassexamples_1_1ghttp__static__request__response__simple_1_1_route_something_htm"><div class="ttname"><a href="classexamples_1_1ghttp__static__request__response__simple_1_1_route_something.htm">examples::ghttp_static_request_response_simple::RouteSomething</a></div><div class="ttdoc">An example implemented route for protocol HTTP, POST requests covering route &quot;/something&quot;.</div><div class="ttdef"><b>Definition:</b> routesomething.h:16</div></div>
<div class="ttc" id="aghttp_8h_htm"><div class="ttname"><a href="ghttp_8h.htm">ghttp.h</a></div></div>
<div class="ttc" id="aghttp__static__request__response__simple_8ino_htm_ae25358bd172d439a0818a8cafb76c8a1"><div class="ttname"><a href="ghttp__static__request__response__simple_8ino.htm#ae25358bd172d439a0818a8cafb76c8a1">sd</a></div><div class="ttdeci">Shared sd</div><div class="ttdoc">Our applications shared data, need access to request/response instances.</div><div class="ttdef"><b>Definition:</b> ghttp_static_request_response_simple.ino:56</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_request_htm_a762b73d5273c2ccf934734c0bb98dda2"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_request.htm#a762b73d5273c2ccf934734c0bb98dda2">ghttp::HTTPRequest::GetLastError</a></div><div class="ttdeci">ERR GetLastError() const</div><div class="ttdoc">Get last error.</div><div class="ttdef"><b>Definition:</b> ghttp_httprequest.h:128</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_request_htm_ab7806a3e6e80d7179322be3f9e55a76ea030eaf86bd425928d1897e1613e167b5"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_request.htm#ab7806a3e6e80d7179322be3f9e55a76ea030eaf86bd425928d1897e1613e167b5">ghttp::HTTPRequest::ERR_NONE</a></div><div class="ttdeci">@ ERR_NONE</div><div class="ttdoc">0 - No error</div><div class="ttdef"><b>Definition:</b> ghttp_httprequest.h:47</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_buffer_htm_aef79015e1a8fb34dd96424849e510831"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_buffer.htm#aef79015e1a8fb34dd96424849e510831">ghttp::HTTPBuffer::SetMaximum</a></div><div class="ttdeci">void SetMaximum(const uint16_t max_length)</div><div class="ttdoc">Set buffer maximum.</div><div class="ttdef"><b>Definition:</b> ghttp_httpbuffer.h:271</div></div>
<div class="ttc" id="aclassghttp_1_1_route_manager_htm"><div class="ttname"><a href="classghttp_1_1_route_manager.htm">ghttp::RouteManager</a></div><div class="ttdoc">Routemanager class used to guide processing of requests and handling failures along with servicing re...</div><div class="ttdef"><b>Definition:</b> ghttp_routemanager.h:23</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_request_htm_ab0a4f01bfba2cb2a460440c0001a1303"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_request.htm#ab0a4f01bfba2cb2a460440c0001a1303">ghttp::HTTPRequest::Parse</a></div><div class="ttdeci">uint16_t Parse(char *request_buffer, uint16_t length, uint16_t max_length, const bool parse_content=true, const bool segmentation=true)</div><div class="ttdoc">Request parse.</div><div class="ttdef"><b>Definition:</b> ghttp_httprequest.h:158</div></div>
<div class="ttc" id="aclassghttp_1_1_h_t_t_p_buffer_htm_a28df8375d6824c339014a1f192aa1742"><div class="ttname"><a href="classghttp_1_1_h_t_t_p_buffer.htm#a28df8375d6824c339014a1f192aa1742">ghttp::HTTPBuffer::SetBuffer</a></div><div class="ttdeci">void SetBuffer(char *buffer, uint16_t length=0, uint16_t offset=0)</div><div class="ttdoc">Set buffer Because Request and Responses may share the same buffer and some Request information maybe...</div><div class="ttdef"><b>Definition:</b> ghttp_httpbuffer.h:189</div></div>
<div class="ttc" id="aghttp__static__pre__route__request__response_8ino_htm_aad6df635ec0b9820ef1ee069e0263614"><div class="ttname"><a href="ghttp__static__pre__route__request__response_8ino.htm#aad6df635ec0b9820ef1ee069e0263614">buffer</a></div><div class="ttdeci">char buffer[448]</div><div class="ttdoc">Single packet buffer for EtherCard library.</div><div class="ttdef"><b>Definition:</b> ghttp_static_pre_route_request_response.ino:81</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Jan 1 2024 14:59:56 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
