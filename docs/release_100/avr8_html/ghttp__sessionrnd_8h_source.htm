<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: session/ghttp_sessionrnd.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-e1d212a(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('ghttp__sessionrnd_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ghttp_sessionrnd.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ghttp__sessionrnd_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * \file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Embedded HTTP request/response handling framework - Session randomise</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * PROJECT: HTTP library</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * TARGET SYSTEM: Arduino, STM32, Atmel AT91SAM, portable</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef GHTTP_SESSIONRND_H</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define GHTTP_SESSIONRND_H</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span>ghttp {</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * A class representing random session id generation</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * \tparam N Session id string length, characters (including NULL)</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">template</span>&lt;u<span class="keywordtype">int</span>8_t N&gt;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classghttp_1_1_session_rnd.htm">   19</a></span>&#160;<span class="keyword">class </span><a class="code" href="classghttp_1_1_session_rnd.htm">SessionRnd</a> {</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:<span class="comment"></span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">     * Convert an index from the acceptable session characters alphabet into ASCII</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">     * \note Use \ref SessionRnd::AlphabetLength to get length</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">     * \attention We cannot use the BASE64 alphabet here as it contains &quot;/&quot; and &quot;+&quot; which are unacceptable for simple inclusion into URLs</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">     * \param[in] i Index into session alphabet.  If larger than alphabet, character returned will be length of alphabet (integer)</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">     * \return ASCII character or length (integer)</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classghttp_1_1_session_rnd.htm#a4986c7fd3ec5844b054e71e6cba3a211">   30</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">char</span> <a class="code" href="classghttp_1_1_session_rnd.htm#a4986c7fd3ec5844b054e71e6cba3a211">FromAlphabet</a>(<span class="keyword">const</span> uint8_t i) {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordtype">char</span> c;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#if defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        PGM_VOID_P alphabet_ = <a class="code" href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a>(<span class="stringliteral">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,-&quot;</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keyword">static</span> uint8_t l = <a class="code" href="ghttp_8h.htm#ae6b66a4eea341e5050580e68bfbc3745">PGM_STRLEN</a>(alphabet_);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">if</span> (i&gt;=l) {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            c = <a class="code" href="ghttp_8h.htm#a37196cf08a64597afdbddd552611e5fe">PGM_CHAR</a>(alphabet_+(l-1)); <span class="comment">// Exclude NULL</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            c = <a class="code" href="ghttp_8h.htm#a37196cf08a64597afdbddd552611e5fe">PGM_CHAR</a>(alphabet_+i);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span> alphabet_[] = <span class="stringliteral">&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,-&quot;</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">if</span> (i&gt;=<span class="keyword">sizeof</span>(alphabet_)) {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            c = <span class="keyword">static_cast&lt;</span><span class="keywordtype">char</span><span class="keyword">&gt;</span>(<span class="keyword">sizeof</span>(alphabet_)-1); <span class="comment">// Exclude NULL</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            c = alphabet_[i];</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#endif // !defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">return</span> c;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">     * Get session alphabet length</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">     * \return Length (characters)</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classghttp_1_1_session_rnd.htm#aadafde5a014a6e441ea42e400e3dce05">   61</a></span>&#160;    <span class="keyword">static</span> uint8_t <a class="code" href="classghttp_1_1_session_rnd.htm#aadafde5a014a6e441ea42e400e3dce05">AlphabetLength</a>() {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(<a class="code" href="classghttp_1_1_session_rnd.htm#a4986c7fd3ec5844b054e71e6cba3a211">FromAlphabet</a>(255));</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment">     * Generate session id string.  Stores in internal static character array to template length N</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment">     * \attention Invokes rand and changes random seed more than once internally.  Seed will be left </span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment">     * in a usable state, hopefully less likely related to generated session id</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">     * \return String pointer (NULL terminated)</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classghttp_1_1_session_rnd.htm#a0279e5d0d706c223fc6e1c448b00847a">   74</a></span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="classghttp_1_1_session_rnd.htm#a0279e5d0d706c223fc6e1c448b00847a">Generate</a>() {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">static</span> <span class="keywordtype">char</span> scratch[N];</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// Attempt to produce some kind of non-pseudo random sequence using our 2 sources of what should/could be entrophy</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">if</span> ((rand() % 100)&lt;50) {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            srand((<a class="code" href="ghttp_8h.htm#a368631586d10c1e522e66f134c133331">GHTTP_SESSIONRND_ENTROPHY_SRC1</a>) ^ 0xffffU ^ (<a class="code" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a>) + (rand() % 255));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            srand((<a class="code" href="ghttp_8h.htm#a368631586d10c1e522e66f134c133331">GHTTP_SESSIONRND_ENTROPHY_SRC1</a>) ^ 0xaaaaU ^ (<a class="code" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a>) + (rand() % 255));</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">for</span>(uint8_t i=0, e2, l=(uint8_t)(<a class="code" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a> ^ 0xff); i&lt;N; i++) {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            e2 = <span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(<a class="code" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a>);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            scratch[i] ^= <span class="keyword">static_cast&lt;</span><span class="keywordtype">char</span><span class="keyword">&gt;</span>(e2 + (rand() % 255) ^ l);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            l = scratch[i] ^ (i&amp;1?0x33:0xaa) + (uint8_t)(<a class="code" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a> ^ 0xff); </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="comment">// Align with alphabet</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">for</span>(uint8_t f,i=0, al=<a class="code" href="classghttp_1_1_session_rnd.htm#aadafde5a014a6e441ea42e400e3dce05">AlphabetLength</a>(); i&lt;N; i++) {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            f = 0;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="keywordflow">for</span>(uint8_t u=0; u&lt;al; u++) {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                <span class="keywordflow">if</span> (scratch[i] == <a class="code" href="classghttp_1_1_session_rnd.htm#a4986c7fd3ec5844b054e71e6cba3a211">FromAlphabet</a>(u)) {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                    f = 1;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">if</span> (!f) {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                <span class="comment">// Correct</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                scratch[i] = <a class="code" href="classghttp_1_1_session_rnd.htm#a4986c7fd3ec5844b054e71e6cba3a211">FromAlphabet</a>(<span class="keyword">static_cast&lt;</span>uint8_t<span class="keyword">&gt;</span>(scratch[i]) % al);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="comment">// This is important for the rest of the f/w which may continue taking pseudo random numbers via rand() and </span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="comment">// is then helpful to disconnect those sequences from the last generated SID</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span> ((rand() % 100)&lt;50) {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            srand((<a class="code" href="ghttp_8h.htm#a368631586d10c1e522e66f134c133331">GHTTP_SESSIONRND_ENTROPHY_SRC1</a>) ^ 0x3333U ^ (<a class="code" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a>) + (rand() % 255));</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            srand((<a class="code" href="ghttp_8h.htm#a368631586d10c1e522e66f134c133331">GHTTP_SESSIONRND_ENTROPHY_SRC1</a>) ^ 0xffffU ^ (<a class="code" href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a>) + (rand() % 255));</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        rand();</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> scratch;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}; <span class="comment">// class SessionRnd</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}; <span class="comment">// namespace ghttp</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">#endif // GHTTP_SESSIONRND_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aghttp_8h_htm_a368631586d10c1e522e66f134c133331"><div class="ttname"><a href="ghttp_8h.htm#a368631586d10c1e522e66f134c133331">GHTTP_SESSIONRND_ENTROPHY_SRC1</a></div><div class="ttdeci">#define GHTTP_SESSIONRND_ENTROPHY_SRC1</div><div class="ttdoc">Random session entrophy source 1.</div><div class="ttdef"><b>Definition:</b> ghttp.h:180</div></div>
<div class="ttc" id="aclassghttp_1_1_session_rnd_htm_a0279e5d0d706c223fc6e1c448b00847a"><div class="ttname"><a href="classghttp_1_1_session_rnd.htm#a0279e5d0d706c223fc6e1c448b00847a">ghttp::SessionRnd::Generate</a></div><div class="ttdeci">static const char * Generate()</div><div class="ttdoc">Generate session id string.</div><div class="ttdef"><b>Definition:</b> ghttp_sessionrnd.h:74</div></div>
<div class="ttc" id="aghttp_8h_htm_a16a0f7e7053a679c9bf4289b441a2be7"><div class="ttname"><a href="ghttp_8h.htm#a16a0f7e7053a679c9bf4289b441a2be7">T</a></div><div class="ttdeci">#define T(x)</div><div class="ttdoc">Text marco.</div><div class="ttdef"><b>Definition:</b> ghttp.h:35</div></div>
<div class="ttc" id="aclassghttp_1_1_session_rnd_htm"><div class="ttname"><a href="classghttp_1_1_session_rnd.htm">ghttp::SessionRnd</a></div><div class="ttdoc">A class representing random session id generation.</div><div class="ttdef"><b>Definition:</b> ghttp_sessionrnd.h:19</div></div>
<div class="ttc" id="aclassghttp_1_1_session_rnd_htm_a4986c7fd3ec5844b054e71e6cba3a211"><div class="ttname"><a href="classghttp_1_1_session_rnd.htm#a4986c7fd3ec5844b054e71e6cba3a211">ghttp::SessionRnd::FromAlphabet</a></div><div class="ttdeci">static char FromAlphabet(const uint8_t i)</div><div class="ttdoc">Convert an index from the acceptable session characters alphabet into ASCII.</div><div class="ttdef"><b>Definition:</b> ghttp_sessionrnd.h:30</div></div>
<div class="ttc" id="aclassghttp_1_1_session_rnd_htm_aadafde5a014a6e441ea42e400e3dce05"><div class="ttname"><a href="classghttp_1_1_session_rnd.htm#aadafde5a014a6e441ea42e400e3dce05">ghttp::SessionRnd::AlphabetLength</a></div><div class="ttdeci">static uint8_t AlphabetLength()</div><div class="ttdoc">Get session alphabet length.</div><div class="ttdef"><b>Definition:</b> ghttp_sessionrnd.h:61</div></div>
<div class="ttc" id="aghttp_8h_htm_a37196cf08a64597afdbddd552611e5fe"><div class="ttname"><a href="ghttp_8h.htm#a37196cf08a64597afdbddd552611e5fe">PGM_CHAR</a></div><div class="ttdeci">#define PGM_CHAR(x)</div><div class="ttdoc">Read character from AVR flash memory.</div><div class="ttdef"><b>Definition:</b> ghttp.h:63</div></div>
<div class="ttc" id="aghttp_8h_htm_aad253e7cf8ef247c14224de0d7ab2b49"><div class="ttname"><a href="ghttp_8h.htm#aad253e7cf8ef247c14224de0d7ab2b49">GHTTP_SESSIONRND_ENTROPHY_SRC2</a></div><div class="ttdeci">#define GHTTP_SESSIONRND_ENTROPHY_SRC2</div><div class="ttdoc">Random session entrophy source 2.</div><div class="ttdef"><b>Definition:</b> ghttp.h:206</div></div>
<div class="ttc" id="aghttp_8h_htm_ae6b66a4eea341e5050580e68bfbc3745"><div class="ttname"><a href="ghttp_8h.htm#ae6b66a4eea341e5050580e68bfbc3745">PGM_STRLEN</a></div><div class="ttdeci">#define PGM_STRLEN(x)</div><div class="ttdoc">Get string length from AVR flash memory string.</div><div class="ttdef"><b>Definition:</b> ghttp.h:76</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_8818ca3602e0fdea8e49e92e257b541f.htm">session</a></li><li class="navelem"><a class="el" href="ghttp__sessionrnd_8h.htm">ghttp_sessionrnd.h</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 16:37:29 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
