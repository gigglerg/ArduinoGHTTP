<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ArduinoGHTTP: /home/davec/repo/ArduinoGHTTP/support/ghttp_mac.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(function() { init_search(); });
/* @license-end */
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="doxygenstyle.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="ghttp_chrome_opt.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ArduinoGHTTP
   &#160;<span id="projectnumber">release_100-b53ec0f(git)</span>
   </div>
   <div id="projectbrief">Embedded library for parsing HTTP requests and creating responses, supporting Arduino, portable (GPL).</div>
  </td>
   <td>        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
</td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('ghttp__mac_8h_source.htm',''); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ghttp_mac.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ghttp__mac_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * \file</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * Embedded HTTP request/response handling framework - MAC address structure</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * PROJECT: GHTTP library</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * TARGET SYSTEM: Arduino, STM32, Atmel AT91SAM, portable</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#ifndef GHTTP_MAC_H</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#define GHTTP_MAC_H</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span>ghttp {</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/**</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * A structure represent a MAC address (12 Hex digit) with various accessors and helpers</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm">   16</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structghttp_1_1_m_a_c__t.htm">MAC_t</a> {<span class="comment"></span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">     * Default constructor, make stable instance, 0x00 0x00 0x00 0x00 0x00 0x00 0x00 MAC</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm#a514e38ed87b21153125b66fd63f75aea">   20</a></span>&#160;    <a class="code" href="structghttp_1_1_m_a_c__t.htm#a514e38ed87b21153125b66fd63f75aea">MAC_t</a>() {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <a class="code" href="structghttp_1_1_m_a_c__t.htm#a3b5af6cae9cc6399b29c96e2a6fd0821">Clear</a>();</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    }</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">     * Clear MAC to 0x00 0x00 0x00 0x00 0x00 0x00 0x00</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm#a3b5af6cae9cc6399b29c96e2a6fd0821">   28</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="structghttp_1_1_m_a_c__t.htm#a3b5af6cae9cc6399b29c96e2a6fd0821">Clear</a>() {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        u16[0] = 0U;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        u16[1] = 0U;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        u16[2] = 0U;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">     * Equality operator for comparisons against another MAC_t</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">     * \param[in] rhs MAC reference for comparison</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="comment">     * \retval true when rhs identical</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="comment">     * \retval false when rhs differs</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm#a741127dd4e78786fd911463018348d36">   42</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structghttp_1_1_m_a_c__t.htm#a741127dd4e78786fd911463018348d36">operator==</a>(<span class="keyword">const</span> <a class="code" href="structghttp_1_1_m_a_c__t.htm">MAC_t</a>&amp; rhs)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">return</span> u16[0] == rhs.u16[0] &amp;&amp; u16[1] == rhs.u16[1] &amp;&amp; u16[2] == rhs.u16[2];</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="comment">     * Inequality operator for comparisons against another MAC_t</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="comment">     * \param[in] rhs MAC reference for comparison</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">     * \retval true when rhs differs</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="comment">     * \retval false when rhs identical</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm#a934282cec2e4419dd98669f5ef15db19">   54</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="structghttp_1_1_m_a_c__t.htm#a934282cec2e4419dd98669f5ef15db19">operator!=</a>(<span class="keyword">const</span> <a class="code" href="structghttp_1_1_m_a_c__t.htm">MAC_t</a>&amp; rhs)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == rhs);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="comment">     * Equal operator for assignment of MAC from ASCII string of the form &quot;XXXXXXXXXXXX&quot; where X is a hex (base 16) digit</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">     * \param[in] s ASCII string pointer (NULL terminated)</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">     * \return This reference</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm#ad0763615bb6bdcbfa2ecc9498515b249">   65</a></span>&#160;    <a class="code" href="structghttp_1_1_m_a_c__t.htm">MAC_t</a>&amp; <a class="code" href="structghttp_1_1_m_a_c__t.htm#ad0763615bb6bdcbfa2ecc9498515b249">operator=</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* s) {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        uint8_t n, i, c, l=strlen(s);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="structghttp_1_1_m_a_c__t.htm#a3b5af6cae9cc6399b29c96e2a6fd0821">Clear</a>();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="comment">// We expect 12 hex digits</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">if</span> (12 == l) {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">for</span>(i=0; i&lt;l; i++) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                c = s[i];</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                <span class="keywordflow">if</span> ((c&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; c&lt;=<span class="charliteral">&#39;9&#39;</span>) || ((c=(c &amp; 223))&gt;=<span class="charliteral">&#39;A&#39;</span> &amp;&amp; c&lt;=<span class="charliteral">&#39;F&#39;</span>)) {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    <span class="keywordflow">if</span> (c&lt;=<span class="charliteral">&#39;9&#39;</span>) {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                        c-= <span class="charliteral">&#39;0&#39;</span>;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                        c-= <span class="charliteral">&#39;A&#39;</span> - 10;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                    <span class="comment">// 0&gt;= c &lt;= 15 (a nibble)</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="keywordflow">if</span> (!(i % 2)) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                        n = c &lt;&lt; 4;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                        n |= c;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                        <span class="comment">// process</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        u8[i&gt;&gt;1] = n;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                    <span class="keywordflow">break</span>;    <span class="comment">// Bad hex digit</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#if defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * Equal operator for assignment of MAC from ASCII string of the form &quot;XXXXXXXXXXXX&quot; where X is a hex (base 16) digit</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     * \param[in] s ASCII string pointer (NULL terminated, flash based)</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * \return This reference</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm#acf958bccf1a7daadf596d9a8f5303ac8">  106</a></span>&#160;    <a class="code" href="structghttp_1_1_m_a_c__t.htm">MAC_t</a>&amp; <a class="code" href="structghttp_1_1_m_a_c__t.htm#acf958bccf1a7daadf596d9a8f5303ac8">operator=</a>(PGM_VOID_P s) {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        uint8_t n, i, c, l=<a class="code" href="ghttp_8h.htm#ae6b66a4eea341e5050580e68bfbc3745">PGM_STRLEN</a>(s);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <a class="code" href="structghttp_1_1_m_a_c__t.htm#a3b5af6cae9cc6399b29c96e2a6fd0821">Clear</a>();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment">// We expect 12 hex digits</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">if</span> (12 == l) {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="keywordflow">for</span>(i=0; i&lt;l; i++) {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                c = <a class="code" href="ghttp_8h.htm#a37196cf08a64597afdbddd552611e5fe">PGM_CHAR</a>(s+i);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                <span class="keywordflow">if</span> ((c&gt;=<span class="charliteral">&#39;0&#39;</span> &amp;&amp; c&lt;=<span class="charliteral">&#39;9&#39;</span>) || ((c=(c &amp; 223))&gt;=<span class="charliteral">&#39;A&#39;</span> &amp;&amp; c&lt;=<span class="charliteral">&#39;F&#39;</span>)) {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                    <span class="keywordflow">if</span> (c&lt;=<span class="charliteral">&#39;9&#39;</span>) {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                        c-= <span class="charliteral">&#39;0&#39;</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                    }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                        c-= <span class="charliteral">&#39;A&#39;</span> - 10;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    <span class="comment">// 0&gt;= c &lt;= 15 (a nibble)</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                    <span class="keywordflow">if</span> (!(i % 2)) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                        n = c &lt;&lt; 4;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                    }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        n |= c;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                        <span class="comment">// process</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        u8[i&gt;&gt;1] = n;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                }<span class="keywordflow">else</span> {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    <span class="keywordflow">break</span>;    <span class="comment">// Bad hex digit</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">#endif // defined(ARDUINO_ARCH_AVR)</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">     * Convert MAC address into string of the form &quot;XXXXXXXXXXXX&quot; where X is a hex (base 16) digit</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">     * \param[out] mac_str String pointer.  Maximum length is 13 characters including NULL terminator</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">     * \return Length in characters (not including NULL)</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="structghttp_1_1_m_a_c__t.htm#a2c95bd0e6a465483ec7b2dfa58bad0c3">  148</a></span>&#160;    uint8_t <a class="code" href="structghttp_1_1_m_a_c__t.htm#a2c95bd0e6a465483ec7b2dfa58bad0c3">String</a>(<span class="keywordtype">char</span> *mac_str) {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        uint8_t l = 0;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">for</span>(uint8_t u=0; u&lt;6; u++) {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">if</span> (u8[u]&lt;0x10) {</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                mac_str[l++] = <span class="charliteral">&#39;0&#39;</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            l += StringHelper::FromUInt&lt;uint8_t&gt;(u8[u], &amp;mac_str[l], 16);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">return</span> l;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="comment">    /**</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="comment">     * MAC storage, various integer types</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keyword">union </span>{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        uint8_t        u8[6];</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        uint16_t    u16[3];</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    };</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}; <span class="comment">// struct MAC_t</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}; <span class="comment">// namespace ghttp</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="preprocessor">#endif // GHTTP_MAC_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm_ad0763615bb6bdcbfa2ecc9498515b249"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm#ad0763615bb6bdcbfa2ecc9498515b249">ghttp::MAC_t::operator=</a></div><div class="ttdeci">MAC_t &amp; operator=(const char *s)</div><div class="ttdoc">Equal operator for assignment of MAC from ASCII string of the form &quot;XXXXXXXXXXXX&quot; where X is a hex (b...</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:65</div></div>
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm_a514e38ed87b21153125b66fd63f75aea"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm#a514e38ed87b21153125b66fd63f75aea">ghttp::MAC_t::MAC_t</a></div><div class="ttdeci">MAC_t()</div><div class="ttdoc">Default constructor, make stable instance, 0x00 0x00 0x00 0x00 0x00 0x00 0x00 MAC.</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:20</div></div>
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm_a3b5af6cae9cc6399b29c96e2a6fd0821"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm#a3b5af6cae9cc6399b29c96e2a6fd0821">ghttp::MAC_t::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clear MAC to 0x00 0x00 0x00 0x00 0x00 0x00 0x00.</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:28</div></div>
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm_a934282cec2e4419dd98669f5ef15db19"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm#a934282cec2e4419dd98669f5ef15db19">ghttp::MAC_t::operator!=</a></div><div class="ttdeci">bool operator!=(const MAC_t &amp;rhs) const</div><div class="ttdoc">Inequality operator for comparisons against another MAC_t.</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:54</div></div>
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm_a2c95bd0e6a465483ec7b2dfa58bad0c3"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm#a2c95bd0e6a465483ec7b2dfa58bad0c3">ghttp::MAC_t::String</a></div><div class="ttdeci">uint8_t String(char *mac_str)</div><div class="ttdoc">Convert MAC address into string of the form &quot;XXXXXXXXXXXX&quot; where X is a hex (base 16) digit.</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:148</div></div>
<div class="ttc" id="aghttp_8h_htm_a37196cf08a64597afdbddd552611e5fe"><div class="ttname"><a href="ghttp_8h.htm#a37196cf08a64597afdbddd552611e5fe">PGM_CHAR</a></div><div class="ttdeci">#define PGM_CHAR(x)</div><div class="ttdoc">Read character from AVR flash memory.</div><div class="ttdef"><b>Definition:</b> ghttp.h:63</div></div>
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm">ghttp::MAC_t</a></div><div class="ttdoc">A structure represent a MAC address (12 Hex digit) with various accessors and helpers.</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:16</div></div>
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm_a741127dd4e78786fd911463018348d36"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm#a741127dd4e78786fd911463018348d36">ghttp::MAC_t::operator==</a></div><div class="ttdeci">bool operator==(const MAC_t &amp;rhs) const</div><div class="ttdoc">Equality operator for comparisons against another MAC_t.</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:42</div></div>
<div class="ttc" id="astructghttp_1_1_m_a_c__t_htm_acf958bccf1a7daadf596d9a8f5303ac8"><div class="ttname"><a href="structghttp_1_1_m_a_c__t.htm#acf958bccf1a7daadf596d9a8f5303ac8">ghttp::MAC_t::operator=</a></div><div class="ttdeci">MAC_t &amp; operator=(PGM_VOID_P s)</div><div class="ttdoc">Equal operator for assignment of MAC from ASCII string of the form &quot;XXXXXXXXXXXX&quot; where X is a hex (b...</div><div class="ttdef"><b>Definition:</b> ghttp_mac.h:106</div></div>
<div class="ttc" id="aghttp_8h_htm_ae6b66a4eea341e5050580e68bfbc3745"><div class="ttname"><a href="ghttp_8h.htm#ae6b66a4eea341e5050580e68bfbc3745">PGM_STRLEN</a></div><div class="ttdeci">#define PGM_STRLEN(x)</div><div class="ttdoc">Get string length from AVR flash memory string.</div><div class="ttdef"><b>Definition:</b> ghttp.h:76</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5815af820a9cc9481f1d0990a0d60286.htm">support</a></li><li class="navelem"><a class="el" href="ghttp__mac_8h.htm">ghttp_mac.h</a></li>
    <li class="footer">Generated on Mon Jan 1 2024 14:59:56 for ArduinoGHTTP by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
